PROCEDURE

REFGBL ($DYNTUT,$MESSAGE,$ECHO)

LOCAL ANSWER   STRING      VALID=(YES,NO)
LOCAL NAME     STRING
LOCAL SAVEMESS STRING
LOCAL P        STRING
LOCAL PROMPT   STRING
LOCAL PROMPT2  STRING
LOCAL PROMPT3  STRING
LOCAL PROMPT4  STRING
LOCAL PROMPT5  STRING
LOCAL RETURN   (STRING,10) INI=""

BODY

LET $ECHO="NO"
LET $DYNTUT="SCREEN"
LET _ONFAIL="CONTINUE"
LET SAVEMESS=$MESSAGE
LET $MESSAGE="ATTN"
LET PROMPT = "[7mVICAR>[0m"
LET PROMPT2 = "[7mVICAR>+[0m"
LET PROMPT3 = "[7mHIT CARRIAGE RETURN TO CONTINUE[0m"
LET PROMPT4 = "[7mVICAR>[0m"
LET PROMPT5 = "[7mHIT CARRIAGE RETURN TO DISPLAY IMAGE[0m"

WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE "*                                                                             *"
WRITE "*                           W  E  L  C  O  M  E                               *"
WRITE "*                                                                             *"
WRITE "* Welcome to a demonstration of an interactive VICAR session.  You will       *"
WRITE "* participate by assuming the role of a VICAR user who has been given a task  *"
WRITE "* typical of the kind performed by scientists at JPL's Multi-Mission Image    *"
WRITE "* Processing Laboratory.                                                      *"
WRITE "*                                                                             *"
WRITE "* Under normal conditions, successful completion of the task would be         *"
WRITE "* dependent on your understanding of VICAR.  However, for training purposes,  *"
WRITE "* the selection of VICAR programs for you to use has been prearranged.  Each  *"
WRITE "* VICAR command line will have been typed in after the &PROMPT4 prompt.  All    *"
WRITE "* you have to do is hit the Carriage Return and the program will execute.     *"
WRITE "*                                                                             *"
WRITE "* Realize that this session only mimics a real interactive session, and that  *"
WRITE "* the programs are not actually executing at all.                             *"
WRITE "*                                                                             *"
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE "*                                                                             *"
WRITE "*                              TASK DESCRIPTION                               *"
WRITE "*                                                                             *"
WRITE "* Your mission, should you choose to accept it, is to process six individual  *"
WRITE "* Voyager 2 images of Jupiter.  Although the images vary in perspective, not  *"
WRITE "* one of them contains Jupiter's entire sphere in the field of view.          *"
WRITE "*                                                                             *"
WRITE "* Secondly, the images were acquired through different spectral filters.  Of  *"
WRITE "* the six frames, two were acquired through the orange filter, two through    *"
WRITE "* the green, and two through the violet filter.  Within each pair of          *"
WRITE "* spectrally like images, one contains the limb (illuminated), ie. left, side *"
WRITE "* of Jupiter, and the other contains the terminator (non-illuminated), ie.    *"
WRITE "* right, side of Jupiter.                                                     *"
WRITE "*                                                                             *"
WRITE "* The task is to mosaic together the limb and terminator images in each       *"
WRITE "* filter pair and display the resulting three complete spheres of Jupiter as  *"
WRITE "* a single color image.  The general flow of processing is described in the   *"
WRITE "* following sequence of steps...                                              *"
WRITE "*                                                                             *"
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE "*                                                                             *"
WRITE "*                       TASK DESCRIPTION (CONTINUED)                          *"
WRITE "*                                                                             *"
WRITE "*    a) Locate the reseaus (geometry reference marks).                        *"
WRITE "*    b) Remove single pixel spikes.                                           *"
WRITE "*    c) Perform radiometric decalibration.                                    *"
WRITE "*    d) Remove the previously located reseaus.                                *"
WRITE "*    e) Perform navigational analysis (locate planet center).                 *"
WRITE "*    f) Perform geometric correction using navigational information.          *"
WRITE "*    g) Calculate and remove photometric function.                            *"
WRITE "*    h) Project images in a single common perspective.                        *"
WRITE "*    i) Fill in missing data.                                                 *"
WRITE "*    j) Mosaic images together to form an image of a complete sphere.         *"
WRITE "*    k) Repair mosaic seams.                                                  *"
WRITE "*    l) High-pass filter one image to be used for ratioing technique.         *"
WRITE "*    m) Ratio images to enhance intensities.                                  *"
WRITE "*    n) Perform contrast enhancement.                                         *"
WRITE "*    o) Rotate images to Earth orientation (vs spacecraft perspective).       *"
WRITE "*    p) Overlay latitude/longitude grid.                                      *"
WRITE "*                                                                             *"
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "Do you have a display device available for allocation (Y or N)?"
GETPAR PARMS=ANSWER
WRITE " "
WRITE " "
WRITE " "
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE "Do you want to display images on the device (Y or N)?"
  GETPAR PARMS=ANSWER
  WRITE " "
  WRITE " "
  WRITE " "
  IF (ANSWER="YES")
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE "What is the logical name of the display device?"     
    GETPAR PARMS=NAME
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE "Stand by..."
    WRITE " "
    WRITE " "
    WRITE " "
    LET $MESSAGE="SILENT"
    VIDS &NAME
    JSET-MESSAGE SILENT
    LET $MESSAGE="ATTN"
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
    WRITE "|                                                                            |"
    WRITE "|                               IMAGE DISPLAY                                |"
    WRITE "|                                                                            |"
    WRITE "| The six Voyager 2 images of Jupiter will now be displayed on the device,   |"
    WRITE "| with the three limb images displayed in the left column and the three      |"
    WRITE "| terminator images displayed in the right column.  The top pair of images   |"
    WRITE "| were acquired through the orange filter, the middle pair through the       |"
    WRITE "| green filter, and the bottom pair through the violet filter.  Notice the   |"
    WRITE "| reseaus (black dots) in the images which are used for geometric            |"
    WRITE "| rectification.                                                             |"
    WRITE "|                                                                            |"
    WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " "
    WRITE " "
    LET P = "&PROMPT5"
    PUTMSG @P "X"
    WRITE " "    
    JDISP MIPL$IMAGES:SAMPLE1.1
    LET P = "&PROMPT3"
    PUTMSG @P "X"
  END-IF
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 1 - Use RESLOC to locate reseaus and save their locations in a file   |"
WRITE "|    for subsequent use by other programs.  This step must be performed for  |"
WRITE "|    all six cases, but we will show you only one to save time.              |"
WRITE "|                                                                            |"
WRITE "|    RESLOC (input,resfile) (output1,output2) PARMS                          |"
WRITE "|                                                                            |"
WRITE "|        Where input   = raw Voyager image                                   |"
WRITE "|              resfile = master Voyager reseau location file                 |"
WRITE "|              output1 = scene-specific reseau location file                 |"
WRITE "|              output2 = geometric transformation file                       |"
WRITE "|              PARMS   = parameters (tutor RESLOC for descriptions)          |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"RESLOC (1972833.RAW,RESJ.FIL) (1972833.RS1,1972833.RS2)"
PUTMSG @P "X"
WRITE "Beginning VICAR task RESLOC"
WRITE "Read access to Reseau file granted"
WRITE "FRAME    1972833 S/N=5 FILTER=3 DATE= 0/  0 REC  238"
WRITE "MODE=              0"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 2 - Use ADESPIKE to detect and remove single pixel spikes by          |"
WRITE "|    averaging adjacent pixels.  This step must be performed for all six     |"
WRITE "|    cases, but we will show you only one to save time.                      |"
WRITE "|                                                                            |"
WRITE "|    ADESPIKE input output PARMS                                             |"
WRITE "|                                                                            |"
WRITE "|        Where input  = raw Voyager image                                    |"
WRITE "|              output = input image with single pixel spikes removed         |"
WRITE "|              PARMS  = parameters (tutor ADESPIKE for descriptions)         |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"ADESPIKE 1972833.RAW 1972833.SPK"
PUTMSG @P "X"
WRITE "Beginning VICAR task ADESPIKE"
WRITE "ADESPIKE VERSION 3"
WRITE "    TOTAL NUMBER OF PIXELS CORRECTED USING ADJACENT SCAN LINE TEST            7"
WRITE "    TOTAL NUMBER OF PIXELS CORRECTED USING SAME SCAN LINE TEST               52"
WRITE "				"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 3 - Use FICOR77 to radiometrically decalibrate the data using input   |"
WRITE "|    calibration files previously generated by the program MJSPFCF.  This    |"
WRITE "|    step must be performed for all six cases, but we will show you only one |"
WRITE "|    to save time.                                                           |"
WRITE "|                                                                            |"
WRITE "|    FICOR77 (input,cal,dc) output PARMS                                     |"
WRITE "|                                                                            |"
WRITE "|        Where input  = despiked Voyager image from ADESPIKE                 |"
WRITE "|              cal    = Voyager calibration file generated from MJSPFCF      |"
WRITE "|              dc     = Dark Current image acquired about same time as input |"
WRITE "|              output = input radiometrically decalibrated                   |"
WRITE "|              PARMS  = parameters (tutor FICOR77 for descriptions)          |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"FICOR77 (1972833.SPK,CAL.ORG,F1811031.J1) +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  1972833.FIC GAIN=0 IOF=1.0"
PUTMSG @P "X"
WRITE "Beginning VICAR task FICOR77"
WRITE "FICOR77 version 2.0"
WRITE "ABLE77V2 -OUTPUT FILE ERROR"
WRITE ""
WRITE "Gain overridden"
WRITE "Dark-Current File input="
WRITE "                     3"
WRITE "Calibration File input="
WRITE "                     2"
WRITE "DARK-CURRENT LABEL..."
WRITE "          77                   800     800 800 800 L 1"
WRITE "          VGR-2   FDS 18110.31   PICNO 0064J2-085   SCET 79.105 23:19:08"
WRITE "          NA CAMERA  EXP 15360.0 MSEC  FILT 0(CLEAR )  LO GAIN  SCAN RATE  1:1"
WRITE "          ERT 79.105 23:58:43   1/ 1 FULL    RES   VIDICON TEMP  -79.00 DEG C"
WRITE "          IN/017950/05 OUT/******/**                 DSS #**   BIT SNR    7.523"
WRITE "           00AE5 A/C3000BC6 B/C07F C/C17F D/007F0000 ETLM/C50BA4C68068E1682811Q"
WRITE "          NA OPCAL 00(*****.* MSEC) PIXAVG 080/0 OPERATIONAL MODE 6(BODARK)"
WRITE "          CAM ECAL CYCLE BEAM  RESET OPEN  CLOSE FLOOD AEXPM  FIL G1 SHUT MODE"
WRITE "          NA   NO   READ  YES   NO    NO    NO    NO    NO    0 P  * NORMAL"
WRITE "          WA   NO   PREP  YES   YES   NO    NO    YES   NO    2 P  7 NORMAL"
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "          ADJACENT LINE PIXELS CHANGED      1. SAME LINE PIXELS CHANGED     4"
WRITE "          RESSAR77"
WRITE "          SAR               04 27 79 20:19:29          CCA31"
WRITE "          1 1 2 800"
WRITE "          SAR"
WRITE "          RAMSAR            04 27 79 20:20:26          CCA31"
WRITE "          INTER"
WRITE "          RAMSAR"
WRITE "          INSERT            04 27 79 20:31:48          CCA31"
WRITE "          RAMSAR            04 30 79 18:10:53          CCA31"
WRITE "          INTER"
WRITE "          RAMSAR"
WRITE "          INSERT            04 30 79 18:13:59          CCA31"
WRITE "          VGR2.NA.DC.APR16"
WRITE "CALIBRATION FILE LABEL..."
WRITE ""
WRITE "          77                  2001    640020016400 I 2"
WRITE "          MJS77 PHOTOMETRIC DATA FILE     S/N=5  1 CAMERA FILTER POSITION 3"
WRITE "          DATE GENERATED  12/11/78  FRAMES LOW PASS FLTRD,DIV BY       9.000"
WRITE "          SCAN RATE= 1   GAIN =0     TEMP  0.00   DEG. C  EXPOSURE *16  MSEC"
WRITE "          INTAP=ISS328G  OUTAP=JS0710   FILE=12"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "             TEMP   26/1  29/2  24/3  24/0"
WRITE ""
WRITE ""
WRITE ""
WRITE ""
WRITE ""
WRITE "DIV=      .9000E+01"
WRITE ""
WRITE "  CAMERA PARAMETERS..."
WRITE "                INPUT   DARK    CALIBRATION"
WRITE "                FRAME   CURRENT FILE"
WRITE "     S/N          5       5       5"
WRITE "     FILTER       3       0       3"
WRITE "     SCANRATE     1       1       1"
WRITE "     GAIN         0       0       0"
WRITE "     MODE       NA ONLY  BODARK"
WRITE "MAXL and luminances of calibration frames--"
WRITE "    540.00      0.00      7.94     15.88     31.75     63.50    127.00    190.00    254.00    381.00    496.00"
WRITE "Exposure time=      .7200E+03"
WRITE ""
WRITE "Radiance refers to solar spectrum"
WRITE "FtL-sec to nanowatt conv factor="
WRITE "             .5021E+01"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "Ft-L to I/F conv factor="
WRITE "             .2381E+02"
WRITE "Scale correction factor=      0.96100003"
WRITE "LINE=            100"
WRITE "LINE=            200"
WRITE "LINE=            300"
WRITE "LINE=            400"
WRITE "LINE=            500"
WRITE "LINE=            600"
WRITE "LINE=            700"
WRITE "LINE=            800"
WRITE "Mean DN of DC=      .1148E+02"
WRITE "Minimum value of a saturated pixel="
WRITE "                 32767"
WRITE "Maximum value of an unsaturated pixel="
WRITE "                  9130"
WRITE "Total number of saturated pixels="
WRITE "                     0"
WRITE "Total number of negative pixels="
WRITE "                  4958"
WRITE "FICOR task completed"
WRITE "				"
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The six images radiometrically corrected by FICOR77 will now be displayed  |"
  WRITE "| on the device.  Notice that differences in scene brightness are now more   |"
  WRITE "| apparent between the image pairs of different spectral filters, with the   |"
  WRITE "| violet filter (bottom pair) having the lowest brightness.                  |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.2
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 4 - Use RESSAR77 to remove reseaus previously located by RESLOC, as   |"
WRITE "|    well as major blemishes, by interpolation.  This step must be performed |"
WRITE "|    for all six cases, but we will show you only one to save time.          |"
WRITE "|                                                                            |"
WRITE "|    RESSAR77 (input,resfile,blemfile) output PARMS                          |"
WRITE "|                                                                            |"
WRITE "|        Where input    = radiometrically decalibrated image from FICOR77    |"
WRITE "|              resfile  = reseau loction file from RESLOC                    |"
WRITE "|              blemfile = master camera blemish location file                |"
WRITE "|              output   = input with reseaus and blemishes removed           |"
WRITE "|              PARMS    = parameters (tutor RESSAR77 for descriptions)       |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"RESSAR77 (1972833.FIC,1972833.RS1,UD2:[CCA314.VGR2]BLEMLOC.NA)  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  1972833.RES"
PUTMSG @P "X"
WRITE "Beginning VICAR task RESSAR77"
WRITE "TOTAL # CORRECTED PIXELS ="
WRITE "                 17160"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The radiometrically corrected images with reseaus removed by RESSAR77 will |"
  WRITE "| now be displayed on the device.                                            |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.3
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 5 - Use FARENC to calculate planet center by locating the planet limb |"
WRITE "|    and fitting a constrained ellipse using navigational type information.  |"
WRITE "|    The navigational information (planet center offset) is added to the     |"
WRITE "|    geometric correction information in a file to be used later by GEOMA.   |"
WRITE "|    This step must be performed for all six cases, but we will show you     |"
WRITE "|    only one to save time.                                                  |"
WRITE "|                                                                            |"
WRITE "|    FARENC (input,resfile) output PARMS                                     |"
WRITE "|                                                                            |"
WRITE "|        Where input   = radiometrically decalibrated image from FICOR77     |"
WRITE "|              resfile = geometric transformation file from RESLOC           |"
WRITE "|              output  = navigational information file                       |"
WRITE "|              PARMS   = parameters (tutor FARENC for descriptions)          |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"FARENC (1972833.FIC,1972833.RS2) 1972833.FAR  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"   SIZE=(1,1,1000,1000) GEOM=3 'AUTO AREA=(5,5,790,790) DNTH=500 BELO=500"
PUTMSG @P "X"
WRITE "Beginning VICAR task FARENC"
WRITE "input image is image space"
WRITE "project=VOYAGER"
WRITE "SYSTEM LABEL SAYS INPUT IS HALFWORD"
WRITE ""
WRITE "DATA FROM SEDR ARE:"
WRITE "FAR=        24819735"
WRITE "LATI=      8.3103831"
WRITE "ANGLE=     161.15135"
WRITE "SCALE=     84.821429"
WRITE "FOCAL=     1503.4900"
WRITE "REQU=      71400.002"
WRITE "RPOL=      66773.002"
WRITE "LONG=      291.94104"
WRITE "SUNLAT=   0.12670947"
WRITE "SUNLON=    254.89175"
WRITE ""
WRITE "SEMAA      366.86729"
WRITE "SEMIA      343.60632"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "LIN OFSET           0.01791393"
WRITE "SAM OFSET           0.00611538"
WRITE "SUNANGLE=            261.78936"
WRITE ""
WRITE "Peak DN value=            7352"
WRITE "ACTIVITY RESET TO         1050"
WRITE "BELOW RESET TO             500"
WRITE "DNTH RESET TO              500"
WRITE "AVE ACTIVITY         3709.1362"
WRITE "      + -            3592.3362"
WRITE ""
WRITE "Initial number of points located=             1335"
WRITE ""
WRITE "Points remaining after cluster rej=            739"
WRITE "using geoma file for distortion correction"
WRITE "Constrained ellipse fit object space"
WRITE "Line of center=       408.74149"
WRITE "Samp of center=       976.72528"
WRITE "Radial fit mean residual=      0.41968864"
WRITE ""
WRITE "GENERAL ELLIPSE IMAGE SPACE"
WRITE "LINE   OF CENTER=    316.91834"
WRITE "SAMPLE OF CENTER=    800.44960"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE ""
WRITE "CIRCLE IN IMAGE SPACE"
WRITE "LINE   OF CENTER=    316.91836"
WRITE "SAMPLE OF CENTER=    800.44958"
WRITE ""
WRITE "CONSTRAINED ELLIPSE IMAGE SPACE"
WRITE "LINE OF CENTER  =    316.91834"
WRITE "SAMPLE OF CENTER=    800.44958"
WRITE ""
WRITE "CONSTRAINED CIRCLE IMAGE SPACE"
WRITE "LINE OF CENTER=      316.91834"
WRITE "SAMPLE OF CENTER=    800.44958"
WRITE ""
WRITE "PLANET CENTER MOVED TO LINE  =           500.00001"
WRITE "PLANET CENTER MOVED TO SAMPLE=           500.00001"
WRITE ""
WRITE "PICTURE SHIFTED DOWN BY LINES   =        91.240601"
WRITE "PICTURE SHIFTED RIGHT BY SAMPLES=       -476.73139"
WRITE "DSRN               =                   3"
WRITE "#PAR WORDS PASSED         2228"
WRITE "ICL(1)=         2218"
WRITE ""
WRITE "0GEOMA PARAMS WRITTE"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 6 - Use GEOMA to geometrically correct the image, applying planet     |"
WRITE "|    center offset to the center of the output.  This step must be performed |"
WRITE "|    for all six cases, but we will show you only one to save time.          |"
WRITE "|                                                                            |"
WRITE "|    GEOMA (input,navfile) output PARMS                                      |"
WRITE "|                                                                            |"
WRITE "|        Where input   = cleaned image from RESSAR77                         |"
WRITE "|              navfile = navigational information file from FARENC           |"
WRITE "|              output  = input geometrically corrected                       |"
WRITE "|              PARMS   = parameters (tutor GEOMA for descriptions)           |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"GEOMA (1972833.RES,1972833.FAR) 1972833.GEO SIZE=(1,1,1000,1000)"
PUTMSG @P "X"
WRITE "Beginning VICAR task GEOMA"
WRITE "SYSTEM LABEL SAYS INPUT IS HALFWORD"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The six images with the planet centers located by FARENC and then          |"
  WRITE "| geometrically corrected by GEOMA will now be displayed on the device.      |"
  WRITE "| Within each image, the planet is projected so that its center corresponds  |"
  WRITE "| with the image center.                                                     |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.4
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 7 - Use PHOTFUNC to calculate and remove the photometric function,    |"
WRITE "|    thereby compensating for illumination differences in the scene.  This   |"
WRITE "|    step must be performed for all six cases, but we will show you only one |"
WRITE "|    to save time.                                                           |"
WRITE "|                                                                            |"
WRITE "|    PHOTFUNC input output PARMS                                             |"
WRITE "|                                                                            |"
WRITE "|        Where input  = geometrically corrected image from GEOMA             |"
WRITE "|              output = input with photometric function removed              |"
WRITE "|              PARMS  = parameters (tutor PHOTFUNC for descriptions)         |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"PHOTFUNC 1972833.GEO 1972833.PHT SSCPT=(500.,500.) 'FARENC  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  LINC=5 SINC=5 FUNC=HAPKE BEST=(0.98962,-0.3125,0.43125,0.0)"
PUTMSG @P "X"
WRITE "Beginning VICAR task PHOTFUNC"
WRITE "SYSTEM LABEL SAYS INPUT IS HALF"
WRITE "MAP2 LABELS NOT FOUND"
WRITE "PICTURE TYPE=                8"
WRITE "SSCPT=     500.00001  500.00000"
WRITE "FDSNO=       1972833"
WRITE "GEODETIC SUB S/C LAT=          8.3103828"
WRITE "GEOCENTRIC SUBS/C LAT=         7.2790737"
WRITE ""
WRITE "C=        -.94873764 0.29140376 -.12239584 -.20229610 -.26231895 0.94353862"
WRITE "          0.24284393 0.91993077 0.30782171"
WRITE ""
WRITE "VR=       -3127525.1   23412385  7622204.0"
WRITE ""
WRITE "ME=       -.87153475 -.43683558 -.22271498 0.49010321 -.79000966 -.36835261"
WRITE "          -.01503747 -.43018541 0.90261536"
WRITE "COMMON/C8/=          500.00000  500.00000  500.00000  500.00000  84.821426"
WRITE "                     1503.4900  291.94101  7.2790737  161.15134   24819734"
WRITE ""
WRITE ""
WRITE ""
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "HAPKE PHOTOMETRIC FUNCTION,W= 0.990,B= -0.313,H= 0.431,C=  0.431"
WRITE "FAR ENCOUNTER MODE USED"
WRITE "LSSP,SSSP=           500.00000  500.00000"
WRITE "RPOLE,REQ=            66854.002  71492.002"
WRITE "OM=       0.86253341 -.34447318 -.37064045 -.39158359 0.00949264 -.92009357"
WRITE "          0.32046591 0.93874817 -.12670233"
WRITE "RSVE=      9199197.3   22836478  3144718.1"
WRITE "THRESH=            1"
WRITE "NUMBER OF POINTS FLAGGED=          26583"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The six images with their photometric function removed by PHOTFUNC to      |"
  WRITE "| compensate for within-scene variation in brightness will now be displayed  |"
  WRITE "| on the device.                                                             |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.5
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 8 - Use HIST to calculate the dynamic range of the images generated   |"
WRITE "|    from PHOTFUNC, which are in halfword (16 bit) format.  This information |"
WRITE "|    will prove neccesary in subsequent conversions to byte (8 bit) format.  |"
WRITE "|    This step must be performed for all six cases, but we will show you     |"
WRITE "|    only one to save time.                                                  |"
WRITE "|                                                                            |"
WRITE "|    HIST input PARMS                                                        |"
WRITE "|                                                                            |"
WRITE "|        Where input  = halfword formatted images from PHOTFUNC              |"
WRITE "|              PARMS  = parameters (tutor HIST for descriptions)             |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"HIST 1972833.PHT (213,315,474,180) 'NOHIST"
PUTMSG @P "X"
WRITE "Beginning VICAR task HIST"
WRITE "AVERAGE GRAY LEVEL=2125.226       STANDARD DEVIATION=188.8602       NUMBER ELEMENTS=   85320."
WRITE "MIN. DN=      1643"
WRITE "MAX. DN=      2803"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 9 - Use C to compress the dynamic range in the halfword formatted     |"
WRITE "|    images output from PHOTFUNC to byte range, the image format required    |"
WRITE "|    by PTP later in the procedure.  Rely on the information obtained from   |"
WRITE "|    HIST in the previous step to determine conversion limits.  This step    |"
WRITE "|    must be performed for all six cases, but we will show you only one to   |"
WRITE "|    save time.                                                              |"
WRITE "|                                                                            |"
WRITE "|    C input output PARMS                                                    |"
WRITE "|                                                                            |"
WRITE "|        Where input  = geometrically corrected image from GEOMA             |"
WRITE "|              output = input with photometric function removed              |"
WRITE "|              PARMS  = parameters (tutor C for descriptions)                |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"C 1972833.PHT 1972833.BYT IRA=(0.,5000.) ORA=(0.,255.) 'BYTE"
PUTMSG @P "X"
WRITE "Beginning VICAR task C"
WRITE ""
WRITE "C VERSION 3"
WRITE ""
WRITE "OUT = IN*     0.051+       0.5"
WRITE ""
WRITE "INPUT FORMAT = HALF"
WRITE ""
WRITE "OUTPUT FORMAT = BYTE"
WRITE ""
WRITE "CONVERSION COMPLETE"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 10 - Use PTP to rotate the images to a common perspective,            |"
WRITE "|    referencing an image aqcuired between the acquisition times of the six  |"
WRITE "|    processed images.  This step must be performed for all six cases, but   |"
WRITE "|    we will show you only one to save time.                                 |"
WRITE "|                                                                            |"
WRITE "|    PTP input output PARMS                                                  |"
WRITE "|                                                                            |"
WRITE "|        Where input  = image from PHOTFUNC converted to byte format using C |"
WRITE "|              output = input rotated to same perspective as a reference     |"
WRITE "|              PARMS  = parameters (tutor PTP for descriptions)              |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"PTP 1972833.BYT 1972833.PTP PC=(500.0,500.0) PLANET=JUPITER  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  RFRAME=1972841 RCAM=5 RPC=(500.0,500.0)"
PUTMSG @P "X"
WRITE "Beginning VICAR task PTP"
WRITE "PTP Version 2"
WRITE "SEDR rotation rate is 870.5360 degrees/day"
WRITE "***PTP task completed"
WRITE "	"
WRITE "	"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 11 - Use HIST to compute the mean DN for a common area located near   |"
WRITE "|    the eventual mosaic seam of the two orange filter images.  The mean     |"
WRITE "|    value will be used to normalize one of the orange filter images to the  |"
WRITE "|    other to better hide the seam when the mosaicking is performed later in |"
WRITE "|    the procedure.  Perform for both orange filter images.                  |"
WRITE "|                                                                            |"
WRITE "|    HIST input PARMS                                                        |"
WRITE "|                                                                            |"
WRITE "|        Where input  = an orange filter image from PTP                      |"
WRITE "|              PARMS  = parameters (tutor HIST for descriptions)             |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"HIST 1972833.PTP (500,200,20,20) 'NOHIST"
PUTMSG @P "X"
WRITE "Beginning VICAR task HIST"
WRITE "AVERAGE GRAY LEVEL=93.01500       STANDARD DEVIATION=5.354416       NUMBER ELEMENTS=     400."
WRITE "MIN. DN=        88"
WRITE "MAX. DN=       112"
WRITE "				"
WRITE "				"
LET P = "&PROMPT"//"HIST 1972845.PTP (500,200,20,20) 'NOHIST"
PUTMSG @P "X"
WRITE "Beginning VICAR task HIST"
WRITE "AVERAGE GRAY LEVEL=90.45000       STANDARD DEVIATION=4.406529       NUMBER ELEMENTS=     400."
WRITE "MIN. DN=        82"
WRITE "MAX. DN=       109"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 12 - Use F2 to execute a function that normalizes one of the orange   |"
WRITE "|    filter images to the other based on the difference between the mean DN  |"
WRITE "|    values as determined from HIST in Step 11.                              |"
WRITE "|                                                                            |"
WRITE "|    F2 input output PARMS                                                   |"
WRITE "|                                                                            |"
WRITE "|        Where input  = an orange filter image from PTP                      |"
WRITE "|              output = input changed in brightness by normalizaton factor   |"
WRITE "|              PARMS  = parameters (tutor F2 for descriptions)               |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"F2 1972833.PTP 1972833.NRM FUNC='IN1*0.9677419'"
PUTMSG @P "X"
WRITE "Beginning VICAR task F2"
WRITE "   LOAD   1"
WRITE "   MUL   21"
WRITE "   RETN   0"
WRITE "F2 using byte table lookup"
WRITE "FUNCTION EVALUATED       256 TIMES"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 13 - Use COPY to subsection the normalized orange filter image and    |"
WRITE "|    the referenced orange filter image to cut away anomolies in scene       |"
WRITE "|    brightness located near the eventual mosaic seam.  The anonmolies are   |"
WRITE "|    due to deficiancies in modelling the photometric function.              |"
WRITE "|                                                                            |"
WRITE "|    COPY input output PARMS                                                 |"
WRITE "|                                                                            |"
WRITE "|        Where input  = an orange filter image                               |"
WRITE "|              output = subsectioned area of input                           |"
WRITE "|              PARMS  = parameters (tutor COPY for descriptions)             |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"COPY 1972833.NRM 1972833.SUB (191,1,809,220)"
PUTMSG @P "X"
WRITE "Beginning VICAR task COPY"
WRITE "				"
WRITE "				"
LET P = "&PROMPT"//"COPY 1972845.PTP 1972845.SUB (191,1,809,1000)"
PUTMSG @P "X"
WRITE "Beginning VICAR task COPY"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 14 - Use FASTMOS to mosaic together the limb and terminator images    |"
WRITE "|    for each of the three spectral filters.  This step must be performed    |"
WRITE "|    for all three cases, but we will show you only one to save time.        |"
WRITE "|                                                                            |"
WRITE "|    FASTMOS (input1,input2) output PARMS                                    |"
WRITE "|                                                                            |"
WRITE "|        Where input1 = limb image from filter X                             |"
WRITE "|              input2 = terminator image from filter X                       |"
WRITE "|              output = mosaic of the two inputs                             |"
WRITE "|              PARMS  = parameters (tutor FASTMOS for descriptions)          |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"FASTMOS (1972833.SUB,1972845.SUB) RED.MOS (1,1,1000,1000)  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  OFF1=(191,1) OFF2=(191,1)"
PUTMSG @P "X"
WRITE "Beginning VICAR task FASTMOS"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The three images each mosaicked together from a pair of images by FASTMOS  |"
  WRITE "| will now be displayed.  The upper right is the mosaicked orange filter     |"
  WRITE "| image, the upper left is the mosaicked green filter image, and the bottom  |"
  WRITE "| is the mosaicked violet filter image.                                      |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.6
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 15 - Use HIST to compute the mean DN for the same area in both the    |"
WRITE "|    orange and green filter images.  The area should be located adjacent to |"
WRITE "|    the upper edge of the orange image.  The mean DN values will be used to |"
WRITE "|    recale green filter image data, using it to fill in the void in the     |"
WRITE "|    orange image.                                                           |"
WRITE "|                                                                            |"
WRITE "|    HIST input PARMS                                                        |"
WRITE "|                                                                            |"
WRITE "|        Where input  = mosaicked green or orange filter image               |"
WRITE "|              PARMS  = parameters (tutor HIST for descriptions)             |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"HIST RED.MOS (195,455,30,30) 'NOHIST"
PUTMSG @P "X"
WRITE "Beginning VICAR task HIST"
WRITE "AVERAGE GRAY LEVEL=97.45667       STANDARD DEVIATION=2.439333       NUMBER ELEMENTS=     900."
WRITE "MIN. DN=        92"
WRITE "MAX. DN=       106"
WRITE "				"
WRITE "				"
LET P = "&PROMPT"//"HIST GRN.MOS (195,455,30,30) 'NOHIST"
PUTMSG @P "X"
WRITE "Beginning VICAR task HIST"
WRITE "AVERAGE GRAY LEVEL=94.59000       STANDARD DEVIATION=2.707953       NUMBER ELEMENTS=     900."
WRITE "MIN. DN=        83"
WRITE "MAX. DN=       103"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 16 - Use F2 to execute a function that adds the orange and green      |"
WRITE "|    images together so that the void in the orange filter image is filled   |"
WRITE "|    in with rescaled green filter data.  The function only adds the         |"
WRITE "|    rescaled green filter data where DN=0 in the orange filter image.       |"
WRITE "|                                                                            |"
WRITE "|    F2 (input1,input2) output PARMS                                         |"
WRITE "|                                                                            |"
WRITE "|        Where input1 = mosaicked orange filter image                        |"
WRITE "|              input2 = mosaicked green filter image                         |"
WRITE "|              output = void in orange image filled with green image data    |"
WRITE "|              PARMS  = parameters (tutor F2 for descriptions)               |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"F2 (RED.MOS,GRN.MOS) RED.FIL  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  FUNC='(IN1+((1.030235*IN2)*(IN1 .EQ. 0)))'"
PUTMSG @P "X"
WRITE "Beginning VICAR task F2"
WRITE "   LOAD  21"
WRITE "   MUL    2"
WRITE "   STOR  62"
WRITE "   LOAD   1"
WRITE "   EQ    22"
WRITE "   STOR  64"
WRITE "   LOAD  62"
WRITE "   MUL   64"
WRITE "   STOR  66"
WRITE "   LOAD   1"
WRITE "   ADD   66"
WRITE "   RETN   0"
WRITE "F2 using byte table lookup"
WRITE "FUNCTION EVALUATED     65536 TIMES"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 17 - Use TFILT to high-pass filter the green filter image for         |"
WRITE "|    enhancement of detail.  The enhanced green filter image will be used    |"
WRITE "|    in ratioing operations in Steps 18 and 19.                              |"
WRITE "|                                                                            |"
WRITE "|    TFILT input output PARMS                                                |"
WRITE "|                                                                            |"
WRITE "|        Where input  = mosaicked green filter image                         |"
WRITE "|              output = input with high frequency data (detail) enhanced     |"
WRITE "|              PARMS  = parameters (tutor TFILT for descriptions)            |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"TFILT (GRN.MOS,SCX2:TEMP) GRN.IMG 'HIGH THRESH=1 NLW=50 NSW=50"
PUTMSG @P "X"
WRITE "  IF ($COUNT(NOAP)=1) GOTO NO_AP"
WRITE "  LOCAL IN1 STRING INITIAL="""
WRITE "  LOCAL FLAG INTEGER INITIAL=0"
WRITE "  LOCAL NLI  INTEGER INITIAL=0"
WRITE "  LET IN1=INP(1)"
WRITE "  APFLAG INP=@IN1 FLAG=@FLAG NLI=@NLI"
WRITE "Beginning VICAR task APFLAG"
WRITE "AP is not available"
WRITE "				"
WRITE "  IF (FLAG=0 OR NLI>9000) GOTO NO_AP"
WRITE " GOTO NO_AP"
WRITE "    TFILT0 INP=@INP OUT=@OUT SIZE=@SIZE SL=@SL SS=@SS NL=@NL NS=@NS  +"
WRITE "     NLW=@NLW NSW=@NSW THRESH=@THRESH FILTER=@FILTER SCALE=@SCALE  +"
WRITE "     DCTRAN=@DCTRAN BOOST=@BOOST DCLEVEL=@DCLEVEL OFFSET=@OFFSET"
WRITE "Beginning VICAR task TFILT0"
WRITE "#BYTES/PXL=              1"
WRITE "NLW=             51"
WRITE "NSW=             51"
WRITE "END-PROC"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The high-pass filtered green image will now be displayed on the device.    |"
  WRITE "| Notice the increase in detail due to the enhancement of the high frequency |"
  WRITE "| data in the image.                                                         |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.7
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 18 - Use F2 to execute a function that ratios the orange and the      |"
WRITE "|    high-pass filtered green images for intensity enhancement.              |"
WRITE "|                                                                            |"
WRITE "|    F2 (input1,input2) output PARMS                                         |"
WRITE "|                                                                            |"
WRITE "|        Where input1 = filled orange image                                  |"
WRITE "|              input2 = high-pass filtered green image                       |"
WRITE "|              output = ratioed orange image                                 |"
WRITE "|              PARMS  = parameters (tutor F2 for descriptions)               |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"F2 (RED.FIL,BLU.MOS,GRN.IMG) RED.IMG  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  FUNC='(IN1/IN2)*IN3'"
PUTMSG @P "X"
WRITE "Beginning VICAR task F2"
WRITE "   LOAD   1"
WRITE "   DIV    2"
WRITE "   MUL    3"
WRITE "   RETN   0"
WRITE "F2 calculating every pixel"
WRITE "FUNCTION EVALUATED   1000000 TIMES"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 19 - Use F2 to execute a function that ratios the violet and the      |"
WRITE "|    high-pass filtered green images, using the latter as the intensity      |"
WRITE "|    image.                                                                  |"
WRITE "|                                                                            |"
WRITE "|    F2 (input1,input2) output PARMS                                         |"
WRITE "|                                                                            |"
WRITE "|        Where input1 = mosaicked violet image                               |"
WRITE "|              input2 = high-pass filtered green image                       |"
WRITE "|              output = ratioed violet image                                 |"
WRITE "|              PARMS  = parameters (tutor F2 for descriptions)               |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"F2 (RED.FIL,BLU.MOS,GRN.IMG) BLU.IMG  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  FUNC='(IN2/IN1)*IN3'"
PUTMSG @P "X"
WRITE "Beginning VICAR task F2"
WRITE "   LOAD   2"
WRITE "   DIV    1"
WRITE "   MUL    3"
WRITE "   RETN   0"
WRITE "F2 calculating every pixel"
WRITE "FUNCTION EVALUATED   1000000 TIMES"
WRITE "				"
WRITE "				"
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The ratioed orange and ratioed violet images will now be displayed on the  |"
  WRITE "| device with the image to which they were ratioed, the high-pass filtered   |"
  WRITE "| green image.                                                               |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.8
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 20 - Use ROTATE to rotate the intensity enhanced images to 0 degrees  |"
WRITE "|    North, so that the top of the images are oriented to Earth's polar      |"
WRITE "|    North.  This step must be performed for all three cases, but we will    |"
WRITE "|    show you only one to save time.                                         |"
WRITE "|                                                                            |"
WRITE "|    ROTATE input output PARMS                                               |"
WRITE "|                                                                            |"
WRITE "|        Where input  = intensity enhanced image                             |"
WRITE "|              output = input oriented to North azimuth                      |"
WRITE "|              PARMS  = parameters (tutor ROTATE for descriptions)           |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"ROTATE RED.STR RED.ROT ANGLE=-160.724"
PUTMSG @P "X"
WRITE "ROTATE2	INP=@INP PDS=ZZPAR SIZE=@SIZE	SL=@SL	SS=@SS	NL=@NL	NS=@NS	 +"
WRITE "	ANGLE=@ANGLE	NOINTERP=@NOINTERP	 +"
WRITE "	LINE=@LINE	SAMPLE=@SAMPLE	CENTER=@CENTER"
WRITE "Beginning VICAR task ROTATE2"
WRITE "REGION (   1,    1, 1000, 1000) OF THE INPUT PICTURE IS ROTATED  -160.72 DEGREES ABOUT 500.5 , 500.5"
WRITE "THE CENTER OF ROTATION IN THE OUTPUT PICTURE IS LOCATED AT PIXEL      500.5,   500.5"
WRITE "IF ($COUNT(OUT) = 0) RETURN"
WRITE "IF ((ANGLE < 60) AND (ANGLE > -60))"
WRITE "  ELSE"
WRITE "    LGEOM INP=RED.STR OUT=RED.ROT SIZE=@SIZE+"
WRITE " NL=@NL NS=@NS          IDSNAM=@IDSNAM IDSNS=@IDSNS PARMS=ZZPAR"
WRITE "Beginning VICAR task LGEOM"
WRITE "END-IF"
WRITE "END-PROC"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The rotated images will now be displayed on the on the device.             |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.9
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 21 - Use STRETCH to perform a Gaussian mapping operation on the       |"
WRITE "|    dynamic ranges of the three rotated images.  This step must be          |"
WRITE "|    for all three cases, but we will show you only one to save time.        |"
WRITE "|                                                                            |"
WRITE "|    STRETCH input output PARMS                                              |"
WRITE "|                                                                            |"
WRITE "|        Where input  = rotated image from ROTATE                            |"
WRITE "|              output = input contrast enhanced                              |"
WRITE "|              PARMS  = parameters (tutor STRETCH for descriptions)          |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"STRETCH RED.ROT RED.STR 'GAUS GSIG=4."
PUTMSG @P "X"
WRITE "Beginning VICAR task STRETCH"
WRITE "HISTOGRAM BEFORE EXCLUSION . . ."
WRITE "MEAN  =  .5498E+02"
WRITE "SIGMA =  .7405E+02"
WRITE "DN VALUE      0 EXCLUDED"
WRITE "DN VALUE    255 EXCLUDED"
WRITE "HISTOGRAM AFTER EXCLUSION . . ."
WRITE "MEAN  =  .1503E+03"
WRITE "SIGMA =  .1892E+02"
WRITE "*** GAUSS OPTION ***"
WRITE "GAUSSIAN STRETCH: GSIGMA =   4.00"
WRITE " T R A N S F O R M A T I O N"
WRITE "IN         0       1       2       3       4       5       6       7       8       9      10      11      12      13      14"
WRITE "OUT        0      11      15      17      19      20      21      21      22      23      23      24      24      24      25"
WRITE "IN        15      16      17      18      19      20      21      22      23      24      25      26      27      28      29"
WRITE "OUT       25      25      25      26      26      27      27      27      28      28      28      29      29      29      29"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "IN        30      31      32      33      34      35      36      37      38      39      40      41      42      43      44"
WRITE "OUT       30      30      30      30      30      31      31      31      31      31      31      31      32      32      32"
WRITE "IN        45      46      47      48      49      50      51      52      53      54      55      56      57      58      59"
WRITE "OUT       32      32      32      32      32      33      33      33      33      33      33      33      34      34      34"
WRITE "IN        60      61      62      63      64      65      66      67      68      69      70      71      72      73      74"
WRITE "OUT       34      34      35      35      35      35      35      35      35      36      36      36      36      36      37"
WRITE "IN        75      76      77      78      79      80      81      82      83      84      85      86      87      88      89"
WRITE "OUT       37      37      37      37      38      38      38      38      39      39      39      39      39      40      40"
WRITE "IN        90      91      92      93      94      95      96      97      98      99     100     101     102     103     104"
WRITE "OUT       40      40      41      41      41      42      42      42      43      43      44      44      45      46      46"
WRITE " "
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "IN       105     106     107     108     109     110     111     112     113     114     115     116     117     118     119"
WRITE "OUT       47      48      49      50      51      53      54      55      56      58      59      61      63      65      68"
WRITE "IN       120     121     122     123     124     125     126     127     128     129     130     131     132     133     134"
WRITE "OUT       70      72      74      76      78      80      81      83      85      87      88      90      92      93      95"
WRITE "IN       135     136     137     138     139     140     141     142     143     144     145     146     147     148     149"
WRITE "OUT       97      99     100     102     104     106     108     111     113     115     118     120     122     125     127"
WRITE "IN       150     151     152     153     154     155     156     157     158     159     160     161     162     163     164"
WRITE "OUT      130     132     134     137     139     141     143     145     147     149     151     153     154     156     157"
WRITE "IN       165     166     167     168     169     170     171     172     173     174     175     176     177     178     179"
WRITE "OUT      159     160     162     163     165     166     168     169     170     172     173     174     175     177     178"
WRITE " "
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "IN       180     181     182     183     184     185     186     187     188     189     190     191     192     193     194"
WRITE "OUT      179     180     181     182     183     184     185     186     186     187     188     189     190     190     191"
WRITE "IN       195     196     197     198     199     200     201     202     203     204     205     206     207     208     209"
WRITE "OUT      192     193     194     194     195     196     197     198     199     200     201     202     203     204     205"
WRITE "IN       210     211     212     213     214     215     216     217     218     219     220     221     222     223     224"
WRITE "OUT      206     207     208     208     209     209     210     210     211     211     211     212     212     212     212"
WRITE "IN       225     226     227     228     229     230     231     232     233     234     235     236     237     238     239"
WRITE "OUT      213     213     213     214     214     214     215     215     215     216     216     217     217     218     219"
WRITE "IN       240     241     242     243     244     245     246     247     248     249     250     251     252     253     254"
WRITE "OUT      220     220     221     222     223     224     225     226     228     229     231     233     237     242     255"
WRITE "IN       255"
WRITE "OUT        0"
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The contrast enhanced images will now be displayed on the device.          |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP MIPL$IMAGES:SAMPLE1.10
  LET P = "&PROMPT3"
  PUTMSG @P "X"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The contrast enhanced images will now be displayed on the device in all    |"
  WRITE "| three color planes to display a color image.  The orange filter image will |"
  WRITE "| assigned to the Red plane, the green filter image to the Green plane, and  |"
  WRITE "| the violet filter image to the Blue plane.                                 |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP (MIPL$IMAGES:SAMPLE1.11,MIPL$IMAGES:SAMPLE1.12,+
    MIPL$IMAGES:SAMPLE1.13)
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE "|                                                                            |"
WRITE "| STEP 22 - Use OVERLAY to overlay a latitude/longitude grid on the          |"
WRITE "|    contrast enhanced images.  This step must be performed for all three    |"
WRITE "|    cases, but we will show you only one to save time.                      |"
WRITE "|                                                                            |"
WRITE "|    OVERLAY input output PARMS                                              |"
WRITE "|                                                                            |"
WRITE "|        Where input  = contrast enhanced image from STRETCH                 |"
WRITE "|              output = input overlayed with lat/long grid                   |"
WRITE "|              PARMS  = parameters (tutor OVERLAY for descriptions)          |"
WRITE "|                                                                            |"
WRITE "+ -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- +"
WRITE " "
WRITE " "
LET P = "&PROMPT"//"OVERLAY RED.STR RED.GRD DN=WHITE FOCL=1503.49 TARGET=JUPITER  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  SLAT=8.31 SLONG=295.81 RMAGN=24816560 'NONUMBER OSSCPT=(500.0,500.0)  +"
PUTMSG @P ""
LET P = "&PROMPT2"//"  NORANGLE=0.0 FRAME=1972841"
PUTMSG @P "X"
WRITE "Beginning VICAR task OVERLAY"
WRITE "OVERLAY version 2.0"
WRITE "Input is in byte data format"
WRITE "MAP2 LABELS NOT FOUND"
WRITE "Label says mission is Voyager"
WRITE ""
WRITE "C=        -.94657058 -.20412575 0.24967355 0.29784715 -.25648731 0.91951144"
WRITE "          -.12365787 0.94474703 0.30358160"
WRITE ""
WRITE "ME=       -.83647829 -.48914608 -.24706309 0.54779369 -.75873357 -.35248467"
WRITE "          -.01503856 -.43018535 0.90261531"
WRITE "Far encounter mode used"
WRITE "NAVIGATION DATA FOR FRAME 1972841"
WRITE "Image has been geometrically corrected"
WRITE "Target body                       JUPITER"
WRITE "Equatorial radius (km)             71492.0"
WRITE "Polar radius (km)                  66854.0"
WRITE "Spacecraft range (km)               24816560"
WRITE "Spacecraft position (lat,lon)     (  8.31, 295.81)"
WRITE "Planet center (line,sample)       (   500.00,   500.00)"
LET P = "&PROMPT3"
PUTMSG @P "X"
WRITE "North Angle (measured from up)       0.00"
WRITE "Camera Serial Number                     5"
WRITE "Focal length (mm)                 1503.490"
WRITE "Optical axis (line,sample)        ( 500.0, 500.0)"
WRITE "Scale (pixels/mm at focal plane)   84.8214"
WRITE "All latitudes are planetocentric"
WRITE "All longitudes are west"
WRITE "Scale(deg/pixel) =            0.15550621"
WRITE "Number of points used =            16845"
WRITE "MAP001=MAP2 LABEL GENERATED BY MAPLAB SUBROUTINE"
WRITE "MAP002= RADII=( 71492.0, 71492.0, 66854.0),LORANGLE= 0.0"
WRITE "MAP003=*** OBJECT SPACE ***"
WRITE "MAP004=S/C LAT=  8.31 S/C LONG=295.81,S/C LINE=  500.00,S/C SAMPLE=  500.00"
WRITE "MAP005=RANGE=24816560.0,FOCAL=1503.49 PIXEL/MM= 84.8214,NORTH ANGLE=  0.000"
WRITE "MAP006= OPTICAL AXIS LINE 500.00,SAMPLE= 500.00"
WRITE "OVERLAY task completed"
WRITE " "
WRITE " "
LET P = "&PROMPT3"
PUTMSG @P "X"
IF (ANSWER="YES")
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\"
  WRITE "|                                                                            |"
  WRITE "|                               IMAGE DISPLAY                                |"
  WRITE "|                                                                            |"
  WRITE "| The contrasted enhanced color image overlayed with a lat/long grid will    |"
  WRITE "| now be displayed on the device.                                            |"
  WRITE "|                                                                            |"
  WRITE " \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE " "
  LET P = "&PROMPT5"
  PUTMSG @P "X"
  WRITE " "
  JDISP (MIPL$IMAGES:SAMPLE1.14,MIPL$IMAGES:SAMPLE1.15,+
    MIPL$IMAGES:SAMPLE1.16)
  LET $MESSAGE="SILENT"
  WRITE " "
  WRITE " "
  WRITE " "
  WRITE "Do not be alarmed..."
  WRITE " "
  WRITE " "
  WRITE " "
  JSTOP
  LET $MESSAGE="ATTN"
  LET P = "&PROMPT3"
  PUTMSG @P "X"
END-IF
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE " "
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE "*                                                                             *"
WRITE "*                       C O N G R A T U L A T I O N S                         *"
WRITE "*                                                                             *"
WRITE "* This marks the end of the task.  You have done well.  Although the task was *"
WRITE "* somewhat lengthy as an example, it illustrates the flexibilities of VICAR   *"
WRITE "* in performing various image processing techniques.                          *"
WRITE "*                                                                             *"
WRITE "* We hope that this session enlightened you to some of the many possibilites  *"
WRITE "* in image processing available through the use of VICAR.                     *"
WRITE "*                                                                             *"
WRITE "* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *"
WRITE " "
WRITE " "
WRITE " "

LET $MESSAGE=SAVEMESS
FLAG-DELETE NOMESSAGE

END-PROC
