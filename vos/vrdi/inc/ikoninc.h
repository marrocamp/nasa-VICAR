/*
  	Adage specific
 */

/* Adage proprietary software (IDL) common blocks */

#define FSS_BUF 		2000

extern struct IKO_ADDR {
  short HLOAD;
  short LLOAD;
  short NLOAD;
  short BGLEN;
  short ALOAD;
} ADDR;

extern struct IKO_PC {
  short PC;
  short HSTART;
  short LSTART;
  short BC;
  short BUFSIZ;
} PC; 

extern struct IKO_COLORS {
  short CNUM;
} COLORS;

extern struct IKO_KPOLYC {
  short PBSTRT;
  short PBEND;
  short VSTART;
  short TVERTS;
  short PSTART;
  short POLYPC;
  short PBLOCK;
} KPOLYC;

extern struct IKO_KVECT {
  short LISTON;
  short LASTX;
  short LASTY;
  short VSTRT;
} KVECT;

extern struct IKO_GCBUF {
  float GAMMA;
  float OGAMMA;
  short IGMCOR[256];
} GCBUF;

extern struct IKO_BUFFER {
  float BUFFER[FSS_BUF];
} BUFFER;

extern struct IKO_FNTCOM {
  short FNTTBL[16][3];
  short LAST;
} FNTCOM;

extern struct IKO_CURRES {
  short CURRES;
} CURRES;

extern struct IKO_STKBOT {
  short STACK;
  short TMPBOT;
} STKBOT;

extern struct IKO_SRINFO {
  short IKSR;
} SRINFO;

extern struct IKO_BUFDAT {
  short MD3010;
  short MDZTYPE;
} BUFDAT;

extern struct IKO_HOSTD {
  short HDWFLP;
} HOSTD;

/*** End of Adage (IDL) software common blocks ***/

#ifdef PRIVATE
#undef PRIVATE
#endif

#if VMS_OS
#ifdef 	ADAGE_INITIALIZE
#define 	PRIVATE	globaldef noshare
#else
#define 	PRIVATE	globalref
#endif
#endif

#if UNIX_OS
#define PRIVATE
#endif

#ifdef 	ADAGE_INITIALIZE
PRIVATE short IK_Cursor_On = FALSE;
PRIVATE int IK_Auto_On = FALSE;
PRIVATE short IK_Dummy = FALSE;
PRIVATE int LO_clck = 36;
PRIVATE int HI_clck = 18;
PRIVATE int TV_clck = 35;
#else
PRIVATE short IK_Cursor_On;
PRIVATE int IK_Auto_On;
PRIVATE short IK_Dummy;
PRIVATE int LO_clck;
PRIVATE int HI_clck;
PRIVATE int TV_clck;
#endif

PRIVATE int IK_Lut[256];
PRIVATE int Graph_Lut[256];

PRIVATE struct MPC_DATA_STRUCT {
  short mpc_y;
  short mpc_2;
  short mpc_x;
  short mpc_4;
  short mpc_pen;
  short mpc_6;
} MPC_Data;

PRIVATE int MPC_Buffer;
PRIVATE int MPC_Length;
PRIVATE short Half_data[4];

PRIVATE int IKBCR;		/* IKONAS Bus Control Register		*/

#define Set_Word_Mode_DMA        ikbgei ( &IKBCR );\
                                 IKBCR = ( (IKBCR & 03000) | 0500 );\
                                 ikbsei ( &IKBCR );

#define Set_Byte_Mode_DMA        ikbgei ( &IKBCR );\
                                 IKBCR = ( (IKBCR & 03000) | 04500 );\
                                 ikbsei ( &IKBCR );


#define MPC_MASK		0x00E00000
#define MPC_TABLET		0x00E00232
#define MPC_RESET		0x00E00250
#define MPC_COMMAND		0x00E00254

#define  min(A,B)       ((A) < (B) ? (A) : (B))
#define  max(A,B)       ((A) > (B) ? (A) : (B))

#define LUVO_XBAR_CREG		(020301 << 10)
#define XBS34_XBAR_CREG		(030200 << 10)

#define FBC_CONTROL_REGS        ((030000 << 10) | 0)
#define FBC_VIEW_LOC_CREG	((030000 << 10) | 0)
#define FBC_VIEW_SIZE_CREG	((030000 << 10) | 1)
#define FBC_WINDOW_CREG		((030000 << 10) | 2)
#define FBC_ZOOM_CREG		((030000 << 10) | 3)
#define FBC_RATE_CREG		((030000 << 10) | 4)
#define FBC_VIDEO_CREG		((030000 << 10) | 5)
#define FBC_CURPOS_CREG		((030000 << 10) | 6)

#define COLORMAP		(020300 << 10)
#define GRAPHICS_LUT		((020300 << 10) | 256)
#define CURSOR_MEMORY		((030000 << 10) | 0400)

#define LO_RES			0
#define HI_RES			1
#define IK_COLOR		044
#define IK_CODE			0
#define CURSOR_OFFSET		16
#define WINDOW_512		29
#define WINDOW_640_480		30
#define WINDOW_1024		27

#define MPC_ADDR_X 	MPC_Addr.addr_x
#define MPC_ADDR_Y 	MPC_Addr.addr_y
#define MPC_X 		MPC_Data.mpc_x
#define MPC_Y 		MPC_Data.mpc_y
#define MPC_PEN 	MPC_Data.mpc_pen

PRIVATE union TAB_UNION {
  int Tablet_Addr;
  struct TAB_STRUCT {
    short Tablet_Addr1;
    short Tablet_Addr2;
  } Tabadd_struct;
} Tabadd_union;

#define TAB_ADDR_1	Tabadd_union.Tabadd_struct.Tablet_Addr1
#define TAB_ADDR_2	Tabadd_union.Tabadd_struct.Tablet_Addr2
#define TABLET_ADDRESS	Tabadd_union.Tablet_Addr

PRIVATE struct XBAR_STRUCT {
    int XBars[3][8];
    int Overlay[8];
    int Cursor;
    int Colormap;
} XBar_Table;

#define XBAR_CURSOR	XBar_Table.Cursor
#define XBAR_COLORMAP	XBar_Table.Colormap
#define XBAR_OVERLAY(W)	XBar_Table.Overlay[(W)]
#define XBAR(L,W)	XBar_Table.XBars[(L)][(W)]
#define XBS34_WORDS	34

#ifdef 	ADAGE_INITIALIZE
PRIVATE int IK_Cursor[4][256] = {
  { 0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0 },

  { 0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x4,
    0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x2,
    0x4,0x0,0x0,0x0,0x0,0x0,0x0,0x1,
    0x8,0x0,0x0,0x0,0x0,0x0,0x8,0x0,
    0x0,0x1,0x0,0x0,0x0,0x0,0x4,0x0,
    0x0,0x2,0x0,0x0,0x0,0x0,0x2,0x0,
    0x0,0x4,0x0,0x0,0x0,0x0,0x1,0x0,
    0x0,0x8,0x0,0x0,0x0,0x8,0x0,0x0,
    0x0,0x0,0x1,0x0,0x0,0x4,0x0,0x0,
    0x0,0x0,0x2,0x0,0x0,0x2,0x0,0x0,
    0x0,0x0,0x4,0x0,0x0,0x1,0x0,0x0,
    0x0,0x0,0x8,0x0,0x8,0x0,0x0,0x0,
    0x0,0x0,0x0,0x1,0x4,0x0,0x0,0x0,
    0x0,0x0,0x0,0x2,0x2,0x0,0x0,0x0,
    0x0,0x0,0x0,0x4,0x1,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,   /* center line */
    0x0,0x0,0x0,0x4,0x1,0x0,0x0,0x0,
    0x0,0x0,0x0,0x2,0x2,0x0,0x0,0x0,
    0x0,0x0,0x0,0x1,0x4,0x0,0x0,0x0,
    0x0,0x0,0x8,0x0,0x8,0x0,0x0,0x0,
    0x0,0x0,0x4,0x0,0x0,0x1,0x0,0x0,
    0x0,0x0,0x2,0x0,0x0,0x2,0x0,0x0,
    0x0,0x0,0x1,0x0,0x0,0x4,0x0,0x0,
    0x0,0x8,0x0,0x0,0x0,0x8,0x0,0x0,
    0x0,0x4,0x0,0x0,0x0,0x0,0x1,0x0,
    0x0,0x2,0x0,0x0,0x0,0x0,0x2,0x0,
    0x0,0x1,0x0,0x0,0x0,0x0,0x4,0x0,
    0x8,0x0,0x0,0x0,0x0,0x0,0x8,0x0,
    0x4,0x0,0x0,0x0,0x0,0x0,0x0,0x1,
    0x2,0x0,0x0,0x0,0x0,0x0,0x0,0x2,
    0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x4,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0 },

  { 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x1,0x0,0x8,0x0,0x0,0x1,0x0,    /* center line */
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x8,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
    0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0 },

  { 0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF,
    0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x8,
    0x9,0x1,0x6,0x0,0x0,0x0,0x0,0x8,
    0x9,0x3,0x7,0x0,0x0,0x0,0x0,0x8,
    0x9,0xF,0x7,0x0,0x0,0x0,0x0,0x8,
    0x9,0x5,0x6,0x0,0x0,0x0,0x0,0x8,
    0x9,0x1,0x6,0x0,0x0,0x0,0x0,0x8,
    0x9,0x1,0x6,0x0,0x0,0x0,0x0,0x8,
    0x9,0x1,0x6,0x0,0x0,0x0,0x0,0x8,
    0x9,0x1,0x6,0xF,0x3,0x0,0x0,0x8,
    0x1,0x0,0x0,0xF,0x3,0x0,0x0,0x8,
    0x1,0x0,0x0,0xC,0x0,0x0,0x0,0x8,
    0x1,0x0,0x0,0xC,0x0,0x0,0x0,0x8,
    0x1,0x0,0x0,0xC,0x0,0x0,0x0,0x8,
    0x1,0x0,0x0,0xF,0x0,0x0,0x0,0x8,
    0x1,0x0,0x0,0xF,0x3,0x0,0x0,0x8,
    0x1,0x0,0x0,0xF,0xB,0x1,0x0,0x8,
    0x1,0x0,0x0,0x0,0x8,0xF,0x1,0x8,
    0x1,0x0,0x0,0x0,0x8,0x9,0x1,0x8,
    0x1,0x0,0x0,0x0,0x8,0x9,0x1,0x8,
    0x1,0x0,0x0,0x0,0x8,0xF,0x0,0x8,
    0x1,0x0,0x0,0x0,0x8,0xF,0x0,0x8,
    0x1,0x0,0x0,0x0,0x8,0x1,0x3,0x8,
    0x1,0x0,0x0,0x0,0x8,0x1,0x3,0x8,
    0x1,0x0,0x0,0x0,0x0,0x0,0x3,0x8,
    0x1,0x0,0x0,0x0,0x0,0x0,0x3,0x8,
    0x1,0x0,0x0,0x0,0x0,0x0,0x3,0x8,
    0x1,0x0,0x0,0x0,0x0,0x0,0x3,0x8,
    0x1,0x0,0x0,0x0,0x0,0x0,0xF,0x9,
    0x1,0x0,0x0,0x0,0x0,0x0,0xF,0x9,
    0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x9,
    0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF }
};
#else
PRIVATE int IK_Cursor[4][256];
#endif

#define FBC_VIEW_LOC     FBC_Control.FBC_Regs.view_loc
#define FBC_VIEW_SIZE    FBC_Control.FBC_Regs.view_size
#define FBC_WINDOW       FBC_Control.FBC_Regs.window
#define FBC_ZOOM         FBC_Control.FBC_Regs.zoom
#define FBC_RATE         FBC_Control.FBC_Regs.rate
#define FBC_VIDEO        FBC_Control.FBC_Regs.video
#define FBC_CURSOR       FBC_Control.FBC_Regs.cursor

#define FBC_VIEW_X       FBC_Control.FBC_Fields.start_x
#define FBC_VIEW_Y       FBC_Control.FBC_Fields.start_y
#define FBC_SIZE_X       FBC_Control.FBC_Fields.size_x
#define FBC_SIZE_Y       FBC_Control.FBC_Fields.size_y
#define FBC_WINDOW_X     FBC_Control.FBC_Fields.wind_x
#define FBC_WINDOW_Y     FBC_Control.FBC_Fields.wind_y
#define FBC_ZOOM_X       FBC_Control.FBC_Fields.zoom_x
#define FBC_ZOOM_Y       FBC_Control.FBC_Fields.zoom_y
#define FBC_LINE_TIME    FBC_Control.FBC_Fields.line_time
#define FBC_NUM_LINES    FBC_Control.FBC_Fields.num_lines

#define FBC_CURSOR_ON    FBC_Control.FBC_Fields.cursor
#define FBC_RESOLUTION   FBC_Control.FBC_Fields.res
#define FBC_AUTO_CLEAR   FBC_Control.FBC_Fields.erase
#define FBC_SYNC_SELECT  FBC_Control.FBC_Fields.sync
#define FBC_MAP_PAGE     FBC_Control.FBC_Fields.page
#define FBC_SYNC_TIMING  FBC_Control.FBC_Fields.ntsc
#define FBC_INTERLACED   FBC_Control.FBC_Fields.intl
#define FBC_PIXEL_CLOCK  FBC_Control.FBC_Fields.clock

#define FBC_CURSOR_X     FBC_Control.FBC_Fields.cur_x
#define FBC_CURSOR_Y     FBC_Control.FBC_Fields.cur_y

PRIVATE union FBC_UNION {
  struct FBC_STRUCT_2 {
    int view_loc;
    int view_size;
    int window;
    int zoom;
    int rate;
    int video;
    int cursor;
  } FBC_Regs;
  struct FBC_STRUCT_1 {
    short start_x;
    short start_y;
    short size_x;
    short size_y;
    short wind_x;
    short wind_y;
    short zoom_x;
    short zoom_y;
    short line_time;
    short num_lines;
    unsigned fill_1   : 2;
    unsigned cursor   : 1;
    unsigned res      : 1;
    unsigned fill_2   : 1;
    unsigned erase    : 1;
    unsigned sync     : 1;
    unsigned page     : 2;
    unsigned ntsc     : 1;
    unsigned intl     : 1;
    unsigned fill_3   : 5;
    short clock;
    short cur_x;
    short cur_y;
  } FBC_Fields;
} FBC_Control;
