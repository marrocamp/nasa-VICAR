/*
  File: x11_bitmaps.h

  Routines: none

  Purpose: This file contains all the bit patterns for the x11_device
           pixmaps and cursors

  Written by: Mark Mann
*/

#define side_side_width 16
#define side_side_height 16
#define side_side_x_hot 8
#define side_side_y_hot 8
static unsigned char side_side_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x04, 0x10, 0x08,
   0x18, 0x18, 0xfc, 0x3f, 0xfe, 0x7f, 0xfc, 0x3f, 0x18, 0x18, 0x10, 0x08,
   0x20, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define side_side_mask_width 16
#define side_side_mask_height 16
static unsigned char side_side_mask_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x06, 0x70, 0x0e, 0x78, 0x1e,
   0xfc, 0x3f, 0xfe, 0x7f, 0xff, 0xff, 0xfe, 0x7f, 0xfc, 0x3f, 0x78, 0x1e,
   0x70, 0x0e, 0x60, 0x06, 0x00, 0x00, 0x00, 0x00};

#define up_down_width 16
#define up_down_height 16
#define up_down_x_hot 8
#define up_down_y_hot 8
static unsigned char up_down_bits[] = {
   0x00, 0x00, 0x00, 0x01, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0f, 0x90, 0x13,
   0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x90, 0x13, 0xe0, 0x0f,
   0xc0, 0x07, 0x80, 0x03, 0x00, 0x01, 0x00, 0x00};

#define up_down_mask_width 16
#define up_down_mask_height 16
#define up_down_mask_x_hot 8
#define up_down_mask_y_hot 8
static unsigned char up_down_mask_bits[] = {
   0x00, 0x01, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f,
   0xf8, 0x3f, 0xc0, 0x07, 0xc0, 0x07, 0xf8, 0x3f, 0xf8, 0x3f, 0xf0, 0x1f,
   0xe0, 0x0f, 0xc0, 0x07, 0x80, 0x03, 0x00, 0x01};

#define refresh_width 16
#define refresh_height 16
static unsigned char refresh_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0x03, 0xc0, 0xfb, 0xdf, 0xfb, 0xdf, 0xfb, 0xdf,
   0xfb, 0xdf, 0xfb, 0xdf, 0xfb, 0xdf, 0xfb, 0xdf, 0xfb, 0xdf, 0xfb, 0xdf,
   0xfb, 0xdf, 0x03, 0xc0, 0xff, 0xff, 0xff, 0xff};

#define eight_bit_width 16
#define eight_bit_height 16
static unsigned char eight_bit_bits[] = {
   0xff, 0xff, 0x7f, 0xfe, 0xbf, 0xfd, 0xbf, 0xfd, 0x7f, 0xfe, 0xbf, 0xfd,
   0xbf, 0xfd, 0x7f, 0xfe, 0xe3, 0xc1, 0x5b, 0xf7, 0x5b, 0xf7, 0x63, 0xf7,
   0x5b, 0xf7, 0x5b, 0xf7, 0x63, 0xf7, 0xff, 0xff};

#define seven_bit_width 16
#define seven_bit_height 16
static unsigned char seven_bit_bits[] = {
   0xff, 0xff, 0x3f, 0xfc, 0xff, 0xfd, 0xff, 0xfd, 0xff, 0xfe, 0x7f, 0xff,
   0x7f, 0xff, 0x7f, 0xff, 0xe3, 0xc1, 0x5b, 0xf7, 0x5b, 0xf7, 0x63, 0xf7,
   0x5b, 0xf7, 0x5b, 0xf7, 0x63, 0xf7, 0xff, 0xff};

#define left_arrow_button_width 16
#define left_arrow_button_height 16
static unsigned char left_arrow_button_bits[] = {
   0xff, 0xfe, 0x7f, 0xfe, 0xbf, 0xfe, 0xdf, 0x80, 0xef, 0xbf, 0xf7, 0xbf,
   0xfb, 0xbf, 0xfd, 0xbf, 0xfb, 0xbf, 0xf7, 0xbf, 0xef, 0xbf, 0xdf, 0x80,
   0xbf, 0xfe, 0x7f, 0xfe, 0xff, 0xfe, 0xff, 0xff};

#define right_arrow_button_width 16
#define right_arrow_button_height 16
static unsigned char right_arrow_button_bits[] = {
   0x7f, 0xff, 0x7f, 0xfe, 0x7f, 0xfd, 0x01, 0xfb, 0xfd, 0xf7, 0xfd, 0xef,
   0xfd, 0xdf, 0xfd, 0xbf, 0xfd, 0xdf, 0xfd, 0xef, 0xfd, 0xf7, 0x01, 0xfb,
   0x7f, 0xfd, 0x7f, 0xfe, 0x7f, 0xff, 0xff, 0xff};

#define up_arrow_button_width 16
#define up_arrow_button_height 16
static unsigned char up_arrow_button_bits[] = {
   0xff, 0xff, 0x7f, 0xff, 0xbf, 0xfe, 0xdf, 0xfd, 0xef, 0xfb, 0xf7, 0xf7,
   0xfb, 0xef, 0xfd, 0xdf, 0xf0, 0x87, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7,
   0xf7, 0xf7, 0xf7, 0xf7, 0x07, 0xf0, 0xff, 0xff};

#define down_arrow_button_width 16
#define down_arrow_button_height 16
static unsigned char down_arrow_button_bits[] = {
   0xff, 0xff, 0x07, 0xf0, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7, 0xf7,
   0xf7, 0xf7, 0xf0, 0x87, 0xfd, 0xdf, 0xfb, 0xef, 0xf7, 0xf7, 0xef, 0xfb,
   0xdf, 0xfd, 0xbf, 0xfe, 0x7f, 0xff, 0xff, 0xff};

#define gray_width 16
#define gray_height 16
static unsigned char gray_bits[] = {
   0x55, 0x55, 0xaa, 0xaa, 0x55, 0x55, 0xaa, 0xaa, 0x55, 0x55, 0xaa, 0xaa,
   0x55, 0x55, 0xaa, 0xaa, 0x55, 0x55, 0xaa, 0xaa, 0x55, 0x55, 0xaa, 0xaa,
   0x55, 0x55, 0xaa, 0xaa, 0x55, 0x55, 0xaa, 0xaa};

#define elevator_width 16
#define elevator_height 16
static unsigned char elevator_bits[] = {
   0x00, 0x00, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f,
   0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f,
   0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0x00, 0x00};

#define ub_cursor_width 16
#define ub_cursor_height 16
#define ub_cursor_x_hot 8
#define ub_cursor_y_hot 8
static unsigned char ub_cursor_bits[] = {
   0x00, 0x00, 0x00, 0x01, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0f, 0x90, 0x13,
   0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03,
   0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define ub_cursor_mask_width 16
#define ub_cursor_mask_height 16
static unsigned char ub_cursor_mask_bits[] = {
   0x00, 0x01, 0x80, 0x03, 0xc0, 0x07, 0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f,
   0xf8, 0x3f, 0xc0, 0x07, 0xc0, 0x07, 0xc0, 0x07, 0xc0, 0x07, 0xc0, 0x07,
   0xc0, 0x07, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00};

#define db_cursor_width 16
#define db_cursor_height 16
#define db_cursor_x_hot 8
#define db_cursor_y_hot 8
static unsigned char db_cursor_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03,
   0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x80, 0x03, 0x90, 0x13, 0xe0, 0x0f,
   0xc0, 0x07, 0x80, 0x03, 0x00, 0x01, 0x00, 0x00};

#define db_cursor_mask_width 16
#define db_cursor_mask_height 16
static unsigned char db_cursor_mask_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0xc0, 0x07,
   0xc0, 0x07, 0xc0, 0x07, 0xc0, 0x07, 0xf8, 0x3f, 0xf8, 0x3f, 0xf0, 0x1f,
   0xe0, 0x0f, 0xc0, 0x07, 0x80, 0x03, 0x00, 0x01};

#define lb_cursor_width 16
#define lb_cursor_height 16
#define lb_cursor_x_hot 8
#define lb_cursor_y_hot 8
static unsigned char lb_cursor_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x10, 0x00,
   0x18, 0x00, 0xfc, 0x07, 0xfe, 0x07, 0xfc, 0x07, 0x18, 0x00, 0x10, 0x00,
   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define lb_cursor_mask_width 16
#define lb_cursor_mask_height 16
static unsigned char lb_cursor_mask_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x70, 0x00, 0x78, 0x00,
   0xfc, 0x0f, 0xfe, 0x0f, 0xff, 0x0f, 0xfe, 0x0f, 0xfc, 0x0f, 0x78, 0x00,
   0x70, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00};

#define rb_cursor_width 16
#define rb_cursor_height 16
#define rb_cursor_x_hot 8
#define rb_cursor_y_hot 8
static unsigned char rb_cursor_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08,
   0x00, 0x18, 0xc0, 0x3f, 0xc0, 0x7f, 0xc0, 0x3f, 0x00, 0x18, 0x00, 0x08,
   0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define rb_cursor_mask_width 16
#define rb_cursor_mask_height 16
static unsigned char rb_cursor_mask_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x0e, 0x00, 0x1e,
   0xe0, 0x3f, 0xe0, 0x7f, 0xe0, 0xff, 0xe0, 0x7f, 0xe0, 0x3f, 0x00, 0x1e,
   0x00, 0x0e, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00};

#define watch_width 16
#define watch_height 16
#define watch_x_hot 7
#define watch_y_hot 7
static unsigned char watch_bits[] = {
   0x00, 0x00, 0xfe, 0x3f, 0x04, 0x10, 0x88, 0x08, 0xf0, 0x07, 0xe0, 0x03,
   0xc0, 0x01, 0x80, 0x00, 0x80, 0x00, 0x40, 0x01, 0xa0, 0x02, 0x10, 0x04,
   0x88, 0x08, 0xe4, 0x13, 0xfe, 0x3f, 0x00, 0x00};

#define watch_mask_width 16
#define watch_mask_height 16
#define watch_mask_x_hot 7
#define watch_mask_y_hot 7
static unsigned char watch_mask_bits[] = {
   0xff, 0x7f, 0xff, 0x7f, 0xfe, 0x3f, 0xfc, 0x1f, 0xf8, 0x0f, 0xf0, 0x07,
   0xe0, 0x03, 0xc0, 0x01, 0xc0, 0x01, 0xe0, 0x03, 0xf0, 0x07, 0xf8, 0x0f,
   0xfc, 0x1f, 0xfe, 0x3f, 0xff, 0x7f, 0xff, 0x7f};

#define up_arrow_width 16
#define up_arrow_height 16
#define up_arrow_x_hot 8
#define up_arrow_y_hot 8
static unsigned char up_arrow_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x03,
   0xc0, 0x07, 0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f, 0xfc, 0x7f, 0xc0, 0x07,
   0xc0, 0x07, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00};

#define up_arrow_mask_width 16
#define up_arrow_mask_height 16
static unsigned char up_arrow_mask_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x03, 0xc0, 0x07,
   0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f, 0xfc, 0x7f, 0xfe, 0xff, 0xfe, 0xff,
   0xe0, 0x0f, 0xe0, 0x0f, 0xe0, 0x0f, 0x00, 0x00};

#define left_arrow_width 16
#define left_arrow_height 16
#define left_arrow_x_hot 8
#define left_arrow_y_hot 8
static unsigned char left_arrow_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x06, 0x00, 0x07, 0x80, 0x07,
   0xc0, 0x3f, 0xe0, 0x3f, 0xf0, 0x3f, 0xe0, 0x3f, 0xc0, 0x3f, 0x80, 0x07,
   0x00, 0x07, 0x00, 0x06, 0x00, 0x04, 0x00, 0x00};

#define left_arrow_mask_width 16
#define left_arrow_mask_height 16
static unsigned char left_arrow_mask_bits[] = {
   0x00, 0x00, 0x00, 0x0c, 0x00, 0x0e, 0x00, 0x0f, 0x80, 0x0f, 0xc0, 0x7f,
   0xe0, 0x7f, 0xf0, 0x7f, 0xf8, 0x7f, 0xf0, 0x7f, 0xe0, 0x7f, 0xc0, 0x7f,
   0x80, 0x0f, 0x00, 0x0f, 0x00, 0x0e, 0x00, 0x0c};

#define color_lock_width 16
#define color_lock_height 16
static unsigned char color_lock_bits[] = {
   0xff, 0xff, 0x1f, 0xf8, 0x0f, 0xf0, 0xcf, 0xf3, 0xcf, 0xf3, 0xcf, 0xf3,
   0xcf, 0xf3, 0x07, 0xe0, 0x07, 0xe0, 0x07, 0xe0, 0x07, 0xe0, 0x07, 0xe0,
   0x07, 0xe0, 0x07, 0xe0, 0xff, 0xff, 0xff, 0xff};

#define color_unlock_width 16
#define color_unlock_height 16
static unsigned char color_unlock_bits[] = {
   0xff, 0xff, 0x1f, 0xf8, 0x0f, 0xf0, 0xcf, 0xf3, 0xcf, 0xf3, 0xff, 0xf3,
   0xff, 0xf3, 0x07, 0xe0, 0x07, 0xe0, 0xe7, 0xe7, 0xe7, 0xe7, 0xe7, 0xe7,
   0x07, 0xe0, 0x07, 0xe0, 0xff, 0xff, 0xff, 0xff};

#define hard_lut_width 16
#define hard_lut_height 16
static unsigned char hard_lut_bits[] = {
   0xff, 0xff, 0x99, 0xbb, 0xdb, 0xbb, 0xdb, 0xbb, 0x43, 0xba, 0xdb, 0xab,
   0xdb, 0xab, 0x99, 0x93, 0xff, 0xff, 0xbd, 0x82, 0xbd, 0xee, 0xbd, 0xee,
   0xbd, 0xee, 0x21, 0xee, 0xff, 0xff, 0xff, 0xff};

#define soft_lut_width 16
#define soft_lut_height 16
static unsigned char soft_lut_bits[] = {
   0xff, 0xff, 0xc1, 0xbb, 0xdd, 0xbb, 0xfd, 0xbb, 0x41, 0xba, 0xdf, 0xab,
   0xdd, 0xab, 0xc1, 0x93, 0xff, 0xff, 0xbd, 0x82, 0xbd, 0xee, 0xbd, 0xee,
   0xbd, 0xee, 0x21, 0xee, 0xff, 0xff, 0xff, 0xff};

#define point_width 16
#define point_height 16
static unsigned char point_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0xfe, 0x07, 0xff, 0x87, 0xff,
   0x07, 0xff, 0x27, 0xfe, 0x77, 0xfc, 0xff, 0xf8, 0xff, 0xf1, 0xff, 0xe3,
   0xff, 0xc7, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff};

#define mag_width 16
#define mag_height 16
static unsigned char mag_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0x0f, 0xfe, 0x07, 0xfc, 0xe3, 0xf8, 0xf3, 0xf9,
   0xf3, 0xf9, 0xf3, 0xf9, 0xe3, 0xf8, 0x07, 0xfc, 0x0f, 0xf2, 0xff, 0xe3,
   0xff, 0xc7, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff};

#define empty_width 32
#define empty_height 32
#define empty_x_hot 15
#define empty_y_hot 15
static unsigned char empty_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define histogram_width 16
#define histogram_height 16
static unsigned char histogram_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xf9, 0xff, 0xfb, 0xfe, 0x7b, 0xfe, 0x7b, 0xfe,
   0x3b, 0xfc, 0x3b, 0xfc, 0x3b, 0xfc, 0x1b, 0xf8, 0x1b, 0xf8, 0x0b, 0xf0,
   0x03, 0xe0, 0x01, 0xc0, 0xff, 0xff, 0xff, 0xff};

/* software cursor bitmaps */

#define v1_width 32
#define v1_height 32
#define v1_x_hot 15
#define v1_y_hot 15
static unsigned char v1_bits[] = {
   0x00, 0xe0, 0x03, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x80, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x40, 0x03, 0xc0, 0x01, 0x60,
   0x07, 0xe0, 0x03, 0x70, 0x03, 0xc0, 0x01, 0x60, 0x01, 0x80, 0x00, 0x40,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00};

#define v2_width 32
#define v2_height 32
#define v2_x_hot 15
#define v2_y_hot 15
static unsigned char v2_bits[] = {
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0xff, 0xff, 0xff, 0x7f,
   0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};

#define v3_width 32
#define v3_height 32
#define v3_x_hot 15
#define v3_y_hot 15
static unsigned char v3_bits[] = {
   0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0x7f, 0x03, 0x00, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x80, 0x00, 0x60, 0x03, 0xc0, 0x01, 0x60,
   0x03, 0xe0, 0x03, 0x60, 0x03, 0xc0, 0x01, 0x60, 0x03, 0x80, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60,
   0x03, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x60, 0xff, 0xff, 0xff, 0x7f,
   0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00};

#define v4_width 32
#define v4_height 32
#define v4_x_hot 15
#define v4_y_hot 15
static unsigned char v4_bits[] = {
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x0f, 0xf8, 0x7f,
   0xff, 0x1f, 0xfc, 0x7f, 0xff, 0x0f, 0xf8, 0x7f, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00};

#define v5_width 32
#define v5_height 32
#define v5_x_hot 15
#define v5_y_hot 15
static unsigned char v5_bits[] = {
   0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0xff, 0x3f, 0xfe, 0x7f, 0xff, 0x3f, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3f, 0xfe, 0x7f,
   0xff, 0x3f, 0xfe, 0x7f, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00};

#define v6_width 32
#define v6_height 32
#define v6_x_hot 15
#define v6_y_hot 15
static unsigned char v6_bits[] = {
   0x03, 0x00, 0x00, 0x60, 0x06, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x18,
   0x18, 0x00, 0x00, 0x0c, 0x30, 0x00, 0x00, 0x06, 0x60, 0x00, 0x00, 0x03,
   0xc0, 0x00, 0x80, 0x01, 0x80, 0x01, 0xc0, 0x00, 0x00, 0x03, 0x60, 0x00,
   0x00, 0x06, 0x30, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 0x18, 0x0c, 0x00,
   0x00, 0x30, 0x06, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0xc0, 0x01, 0x00,
   0x00, 0xc0, 0x01, 0x00, 0x00, 0x60, 0x03, 0x00, 0x00, 0x30, 0x06, 0x00,
   0x00, 0x18, 0x0c, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 0x06, 0x30, 0x00,
   0x00, 0x03, 0x60, 0x00, 0x80, 0x01, 0xc0, 0x00, 0xc0, 0x00, 0x80, 0x01,
   0x60, 0x00, 0x00, 0x03, 0x30, 0x00, 0x00, 0x06, 0x18, 0x00, 0x00, 0x0c,
   0x0c, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0x30, 0x03, 0x00, 0x00, 0x60,
   0x01, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00};

#define soft_v1_width 32
#define soft_v1_height 32
#define soft_v1_x_hot 15
#define soft_v1_y_hot 15
static unsigned short soft_v1_bits[] = {
   0x1fff, 0xfffc, 0x3fff, 0xfffe,
   0x7fff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0x7ffe, 0xbfff,
   0x3ffc, 0x9ffe, 0x1ff8, 0x8ffc,
   0x3ffc, 0x9ffe, 0x7ffe, 0xbfff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xffff, 0xffff,
   0x7fff, 0xffff, 0x3fff, 0xfffe,
   0x1fff, 0xfffc, 0xffff, 0xffff};

#define soft_v2_width 32
#define soft_v2_height 32
#define soft_v2_x_hot 15
#define soft_v2_y_hot 15
static unsigned short soft_v2_bits[] = {
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x0000, 0x8000, 0x0000, 0x8000,
   0x0000, 0x8000, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0xffff, 0xffff};

#define soft_v3_width 32
#define soft_v3_height 32
#define soft_v3_x_hot 15
#define soft_v3_y_hot 15
static unsigned short soft_v3_bits[] = {
   0x0000, 0x8000, 0x0000, 0x8000,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0x7ffc, 0x9fff,
   0x3ffc, 0x9ffe, 0x1ffc, 0x9ffc,
   0x3ffc, 0x9ffe, 0x7ffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0xfffc, 0x9fff,
   0xfffc, 0x9fff, 0x0000, 0x8000,
   0x0000, 0x8000, 0xffff, 0xffff};

#define soft_v4_width 32
#define soft_v4_height 32
#define soft_v4_x_hot 15
#define soft_v4_y_hot 15
static unsigned short soft_v4_bits[] = {
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x7fff, 0xffff, 0xffff, 0xffff,
   0xf000, 0x8007, 0xe000, 0x8003,
   0xf000, 0x8007, 0xffff, 0xffff,
   0x7fff, 0xffff, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x3fff, 0xfffe, 0xffff, 0xffff};

#define soft_v5_width 32
#define soft_v5_height 32
#define soft_v5_x_hot 15
#define soft_v5_y_hot 15
static unsigned short soft_v5_bits[] = {
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xc000, 0x8001, 0xc000, 0x8001,
   0xffff, 0xffff, 0xffff, 0xffff,
   0xffff, 0xffff, 0xc000, 0x8001,
   0xc000, 0x8001, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xcfff, 0xfff9,
   0xcfff, 0xfff9, 0xffff, 0xffff};

#define soft_v6_width 32
#define soft_v6_height 32
#define soft_v6_x_hot 15
#define soft_v6_y_hot 15
static unsigned short soft_v6_bits[] = {
   0xfffc, 0x9fff, 0xfff9, 0xcfff,
   0xfff3, 0xe7ff, 0xffe7, 0xf3ff,
   0xffcf, 0xf9ff, 0xff9f, 0xfcff,
   0xff3f, 0xfe7f, 0xfe7f, 0xff3f,
   0xfcff, 0xff9f, 0xf9ff, 0xffcf,
   0xf3ff, 0xffe7, 0xe7ff, 0xfff3,
   0xcfff, 0xfff9, 0x9fff, 0xfffc,
   0x3fff, 0xfffe, 0x3fff, 0xfffe,
   0x9fff, 0xfffc, 0xcfff, 0xfff9,
   0xe7ff, 0xfff3, 0xf3ff, 0xffe7,
   0xf9ff, 0xffcf, 0xfcff, 0xff9f,
   0xfe7f, 0xff3f, 0xff3f, 0xfe7f,
   0xff9f, 0xfcff, 0xffcf, 0xf9ff,
   0xffe7, 0xf3ff, 0xfff3, 0xe7ff,
   0xfff9, 0xcfff, 0xfffc, 0x9fff,
   0xfffe, 0xbfff, 0xffff, 0xffff};

