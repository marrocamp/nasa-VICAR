.title	tape mount/dismount macro subroutines
.ident	/106/
;
;	i_mount (device, protect, message, density, block, record)
;	       4       8        12       16       20     24       
;
	$mntdef
	$dmtdef
	$dvidef
;
.PSECT	$CODE PIC,CON,REL,LCL,SHR,EXE,RD,NOWRT,LONG
.entry	i_mount,^m<r2,r3,r4,r5>
;
	movl	16(ap),density
	movl	20(ap),blocksize
	movl	24(ap),recordsize
;
	locc	#0,#132,@4(ap)		;find EOS in device string
	subl	4(ap),r1		;get length of device
	movw	r1,dev_len		;set in $mount
	movl	4(ap),dev_addr		;set string pointer
;
	locc	#0,#132,@12(ap)		;find EOS in mesage string
	subl	12(ap),r1		;get length of message
	bneq	5$			;brif non-zero length
	movw	#1,msg_len		;set dummy message (a blank)
	moval	blank,msg_addr
	brb	7$
5$:	movw	r1,msg_len		;set in $mount
	movl	12(ap),msg_addr		;set address of message
7$:
;
	movl	#<mnt$m_foreign!mnt$m_message>,r0
	tstl	8(ap)			;protected?
	beql	10$			;brif not protected
	bisl	#mnt$m_nowrite,r0	;set write protect bit
10$:	movl	r0,flags		;set in $mount
;
	pushal	itmlst
	calls	#1,sys_mount		;perform "fake" mount
;;;;;;;	$mount_s	itmlst		;perform mount
	ret				;return with $mount code
.page
.sbttl	full_name -- get full name of device
;
;	CODE i_full_name (device, full)
;
;	This function translates a device spec to the "full" form,
;	i.e., default controller and units are added, logical name
;	translation is done, and the famous underscore is added.
;
.entry	i_full_name,^m<r2,r3,r4,r5,r6>
;
	movl	4(ap),device+4		;addres of device name
	locc	#0,#132,@4(ap)		;find EOS
	subl	4(ap),r1		;r1=length
	movl	r1,device		;set in descriptor
	clrw	full_len		;in case service failure
	$getdvi_s	devnam=device,itmlst=getdvi_lst
	movl	r0,r6			;save code
	movc3	full_len,new_name,@8(ap)	;copy output to caller
	clrb	(r3)			;set EOS
	movl	r6,r0
	ret
.page
.sbttl	dismount subroutine
;
;	i_dismou (device, unload)
;
.entry	i_dismou,^M<r2,r3,r4,r5,r6>
;
	movl	4(ap),device+4			;pointer to devnam
	locc	#0,#132,@4(ap)			;find EOS
	subl	4(ap),r1			;r1=length
	movl	r1,device			;set descriptor
	clrl	r0				;flags
	tstl	8(ap)				;unload
	bneq	10$				;brif unload
	bisl	#dmt$m_nounload,r0		;set no unload
10$:
	$dismou_s   devnam=device,flags=r0
	ret
.page
.sbttl	allocated -- determine if device is allocated
;
;	BOOL i_allocated(device);
;
.entry	i_allocated,^m<r2,r3,r4,r5>
;
	movl	4(ap),device+4		;addres of device name
	locc	#0,#132,@4(ap)		;find EOS
	subl	4(ap),r1		;r1=length
	movl	r1,device		;set in descriptor
	clrl	owner_pid		;
	$getdvi_s   devnam=device,itmlst=alloc_lst
	tstl	owner_pid
	beql	10$			;brif no owner or no device
	movl	#1,r0			;return true: tape allocated
	ret
10$:
	clrl	r0			;return false: 
	ret	
.page
.sbttl	i_alloc - allocate device
;
;	code = i_alloc (device, alloc_device)
;
;	device is input text string of device to be allocated;
;	device may be generic.
;
;	alloc_device is output text string of the actual device allocated.
;
.entry	i_alloc,^M<r2,r3,r4,r5,r6>
;
	movl	4(ap),device+4		;addres of device name
	locc	#0,#132,@4(ap)		;find EOS
	subl	4(ap),r1		;r1=length
	movl	r1,device		;set in descriptor
	clrw	alloc_len		;in case service failure
	$alloc_s  devnam=device,phylen=alloc_len,phybuf=alloc_desc
	movl	r0,r6			;save return code
	movc3	alloc_len,@alloc_desc+4,@8(ap)
	clrb	(r3)			;set EOS
	movl	r6,r0			;retrieve code
	ret
.page
.sbttl	i_dealloc - de-allocate device
;
;	code = i_dealloc (device)
;
.entry i_dealloc,^M<r2,r3,r4,r5,r6>
;
	movl	4(ap),device+4		;addres of device name
	locc	#0,#132,@4(ap)		;find EOS
	subl	4(ap),r1		;r1=length
	movl	r1,device		;set in descriptor
	$dalloc_s devnam=device
	ret
.page
.sbttl	data areas
.PSECT	$LOCAL PIC,CON,REL,LCL,NOSHR,NOEXE,RD,WRT,LONG
itmlst:
dev_len:	.blkw	1
		.word	mnt$_devnam
dev_addr:	.blkl	1
		.long	0
;
		.word	4
		.word	mnt$_flags
		.address flags
		.long	0
;
		.word 	4
		.word	mnt$_blocksize
		.address blocksize
		.long	0
;
		.word	4
		.word	mnt$_density
		.address density
		.long	0
;
		.word	4
		.word	mnt$_recordsiz
		.address recordsize
		.long	0
;
msg_len:	.blkw	1
		.word	mnt$_comment
msg_addr:	.blkl	1
		.long	0
;
		.long	0			;end of itmlst
blank:		.byte	32			;blank message
;
.align	long
flags:		.blkl	1
blocksize:	.blkl	1
density:	.blkl	1
recordsize:	.blkl	1
;
getdvi_lst:	.word	64
		.word	dvi$_devnam
		.address  new_name
		.address  full_len
		.long	  0
;
device:		.long	0			;descriptor
		.blkl	1
new_name:	.blkb	64
full_len:	.blkw	1
;
owner_pid:	.blkl	1
alloc_lst:	.word	4
		.word	dvi$_pid		;get owner pid
		.address owner_pid
		.long   0
		.long	0
;
alloc_len:	.blkw	1
alloc_desc:	.long	64			;descriptor for alloc
		.address new_name
;
.END
