.TITLE
MOUNT
.HELP
.if VAX_VMS
			Function and Format


	Function:

	    MOUNT causes the specified tape(s) to be mounted.


	Format:

	    MOUNT  DEVICE=device-name(s)  LABEL=volume-label(s) +
		    NAME=symbolic-name  DENSITY=bpi +
		    BLOCKING=(blocksize,recordsize) +
	    	    COMMENT=operator-message  PROTECT=protection +
		    INIT=initialization
.PAGE
			Introduction
			------------

	There are now two different formats supported by VICAR
	for magnetic tapes.  They are foreign tapes and ANSI-
	labeled tapes.

	Foreign tape is the format that VICAR has always supported,
	and is the only format VICAR supported before 1988.  It is
	called "foreign" because VMS treats the tapes like they
	came from another computer system, since they don't have
	an ANSI label.  Foreign tapes can only be conveniently
	accessed by VICAR and special programs, i.e. the common
	DCL commands (like DIR, TYPE, COPY, etc.) don't work on
	foreign tape files.
.PAGE
			Introduction (continued)
			------------

	In VICAR, foreign tapes must have a symbolic name
	associated with them.  This name is assigned either by
	the ALLOC command or by specifying both a device and
	a symbolic name on the MOUNT command.  Files are then
	accessed by putting a slash "/" and a file number after
	the symbolic name, as in "TAPE/1" or "VGR042/35".
.PAGE
			Introduction (continued)
			------------

	ANSI-labeled tapes were added to VICAR in 1988. ANSI stands
	for the American National Standards Institute.  This
	organization adopted a standard for the labeling of magnetic
	tapes, which became known as the ANSI label.  Note that this
	is a label which is magnetically written on the tape like
	data, not a handwritten label that is stuck on the reel.

	Since the ANSI label is a standard, ANSI tapes are generally
	much better and easier to use for transferring data between
	two different computer systems.  In addition, they make
	local processing on the VAX easier.  Files on ANSI tapes
	are treated just like files on a disk, so you can use almost
	any DCL command on them, including DIR, TYPE, and COPY, as
	well as VICAR commands.  Also, the system verifies that the
	tape that is mounted is the one you requested.
.PAGE
			Introduction (continued)
			------------

	ANSI tapes are accessed using the device name, the symbolic
	(called "logical" by DCL) name given during the ALLOC
	command, or the symbolic name optionally given on the MOUNT
	command.  All three are synonymous.  Files are named, just
	like ordinary disk files, although version numbers are
	ignored.  Files are therefore accessed like "TAPE:A.DAT" or
	"MTA0:TEST01.IMG".  You may also use commands like "DIR TAPE".

	ANSI tapes also allow the use of multivolume data sets.  This
	means that a single logical volume can span several physical
	tapes.  The system automatically handles splitting the file
	and changing the tape.  There are no restrictions on where in
	a file the break between tapes may occur, so a single file
	can be as long as you want, and span several tapes.  You may
	also, of course, put more than one file on a tape or volume set.
.PAGE
			Usage Notes

			ANSI-labeled tapes
			-------------------

	o  The LABEL parameter MUST be specified for ANSI-
	   labeled tapes.

	o  The DEVICE parameter specifies one or more tape drives
	   to use with the tape volume set.  They may be specified
	   by either symbolic name or actual device name.

	o  The LABEL parameter specifies the volume label
	   for each (one or more) volume in the volume set.
	   This label should correspond to the name written
	   on the outside of the tape reel but it doesn't
	   have to.  It must, however, match the label that
	   is magnetically written on the tape.
.PAGE
			Usage Notes (continued)

			ANSI-labeled tapes (continued)
			-------------------

	o  The NAME parameter is optional and defines a logical
	   name to refer to the volume set.  If you don't specify
	   NAME, the symbolic or actual name of the first device
	   may be used to refer to the volume set instead.

	o  The INIT keyword parameter tells VICAR to initialize
	   the tape before using it.  All tapes must be
	   initialized before using them the first time.  INIT
	   will erase the tape, so make sure it contains no
	   important data.  The labels specified in the LABEL
	   parameter are used to name the tapes.  If 'INIT is
	   specified, 'WRITE must be also.
.PAGE
			Usage Notes (continued)

			ANSI-labeled tapes (continued)
			-------------------

	o  If the tape (or the last one in the set) is filled up,
	   then VMS will automatically assign you a continuation
	   volume, i.e. it will make it into a volume set.  This
	   is totally transparent to the user.  The operator will
	   need to know what to do with the continuation volume,
	   so s/he will notify you if this occurs.  If you expect
	   that you may need a continuation volume, please notify
	   the operator beforehand so s/he knows what tape to use.

	o  For more information on magnetic tape volume sets, and
	   on ANSI tapes in general, see the VAX/VMS Guide to Disk
	   and Magnetic Tape Operations.
.PAGE
	    		Usage Notes (continued)

			Foreign tapes
			-------------

	o  The LABEL parameter must NOT be specified for
	   foreign tapes.

	o  If the drive has been previously allocated, the
	   drive is specified in the DEVICE parameter by
	   either symbolic name or actual device name.

	o  If the drive was not previously allocated, both
	   the symbolic name (NAME parameter) and the device
	   name (DEVICE parameter) must be specified.
.PAGE
			Usage Notes (continued)

			General
			-------

	o  The density may be 800, 1600, or 6250 BPI.  The
	   default is 1600.

	o  By default, blocking is not enabled and the user 
	   does not have to specify the BLOCKING parameter 
	   on the MOUNT command.

	o  If blocking is used to write a tape, the same 
	   BLOCKING parameters must be used on subsequent MOUNTs 
	   in order to read the tape.  If blocking is not enabled 
	   when writing a tape, then subsequent MOUNTs of the 
	   tape should not specify a blocking factor.
.PAGE
			Usage Notes (continued)

			General (continued)
			-------

	o  The recordsize part of the BLOCKING parameter is ignored
	   unless you are reading an unlabeled file (in the sense
	   of no VICAR label), in which case it is used to help
	   figure out the actual size of the records on the tape.

	o  The COMMENT parameter is optional, and specifies a message
	   to be sent to the operator along with the mount request.

	o  The PROTECT parameter may be READ or WRITE.  READ means the
	   tape can only be read and is software write-locked.  WRITE
	   means that the tape must have a write ring.  If it is mounted
	   without a ring, the tape is dismounted and the operator is
	   forced to reply to a request for a ring.  READ is the default.
.PAGE
			Examples
			--------

	1. VICAR>MOUNT TAPE COMM="Please mount the tape with the yellow label."+
		 PROTECT=READ

	   The above command sends the quoted message to the operator.
	   The tape will be mounted foreign on the drive previously
	   associated with the symbolic name "TAPE".  Only read access
	   will be allowed to the tape.  The tape should be 1600 BPI.

	2. VICAR>MOUNT TAPE VGR042 COMM="From rack 1A"

	   This command mounts the ANSI-labeled tape named VGR042 on
	   the drive previously associated with the name "TAPE".  The
	   tape label (VGR042 in this case) is automatically included
	   in the operator message, so it does not need to be repeated
	   in the comment.
.PAGE
			Examples (continued)
			--------

	3. VICAR>MOUNT (TAPE1,TAPE2) (TEST01,TEST02) 'WRITE 'INIT +
		 BLOCK=100 DENSITY=6250 COM="Any two scratch tapes"

	   This command asks the operator to mount two scratch tapes
	   on the tape drives associated with TAPE1 and TAPE2.  The
	   tapes will be initialized as ANSI-standard tapes, and will
	   be available for writing.  The tape in TAPE1 will be
	   named TEST01 and the tape in drive TAPE2 will be named TEST02.
	   They will both have a block size of 100 bytes and a density
	   of 6250 BPI.

	4. VICAR>MOUNT MTA0 NAME=TAPE COM="Tape XXX001 from rack 14A"

	   This command mounts a foreign tape when the tape drive was
	   not previously allocated.
.PAGE
			Examples (continued)
			--------

	5. VICAR>MOUNT TAPE MYTAPE XXX COM="From rack 12345Z" 'WRITE

	   This command mounts a ANSI-labeled tape named MYTAPE on
	   drive TAPE.  If TAPE refers to MTA1, then files on this
	   tape can be accessed using the names MTA1:, TAPE:, or XXX:.
	   The name XXX has no purpose other than another synonym for
	   the tape.  Note that files on the tape cannot be referred
	   to using MYTAPE.
.PAGE
			Caveats
			-------

	There are several bugs and "features" in VMS's handling of
	magnetic tapes that the user should be aware of.  Many of
	these should be fixed in future versions of VMS.

	o  When initializing an ANSI tape (the 'INIT keyword on the
	   MOUNT command), VICAR must deallocate the drive for a
	   short time.  There is a very small but finite chance that
	   the drive could be 'stolen' and allocated by another
	   process during that time.  If this happens, notify the
	   VICAR system programmers (so they can keep statistics)
	   and either use a different tape drive or wait for the
	   first one to free up again.
.PAGE
			Caveats (continued)
			-------

	o  Be careful when using the TA78 (TP) drives with
	   multivolume tape sets.  If a file is split between
	   two tapes, and any access is done that is not strictly
	   sequential, VMS can lose the tape position and you
	   could get the wrong part of the file.  This will be
	   fixed in a future release of the HSC-50 firmware.  This
	   is NOT a problem with the TU77 (MT) tape drives.  They
	   work fine with multivolume tape sets.
.PAGE
			Caveats (continued)
			-------

	o  When mounting multivolume tape sets, you should be
	   able to specify any number of tape drives and tapes,
	   i.e., using only one drive for a two-volume set, or
	   using three drives with a two-volume set (to allow
	   for continuation volumes).  This does not work under
	   VMS 4.4.  The number of drives and the number of tapes
	   in the MOUNT command must match.  This problem is fixed
	   in VMS version 4.6.
.PAGE
			Caveats (continued)
			-------

	o  The VAX/VMS Guide to Disk and Magnetic Tape Operations
	   strongly suggests that you may name tapes in a multi-
	   volume set anything you wish, i.e. name the first one
	   SUN and the second one MOON.  However, this does not
	   work.  The first tape may be named anything, but the
	   second and following tapes get assigned continuation
	   names based on the first one, i.e. SUN and SUN_02 or
	   TST1 and TST102.  See the Guide for how continuation
	   names are derived.
.PAGE
			Caveats (continued)
			-------

	o  If you allocate the tape drive outside of VICAR (i.e.
	   in DCL), then VICAR will not be able to initialize
	   a tape.  It is not possible for a program to deallocate
	   a resource allocated by DCL without privileges, and
	   the drive must be deallocated during the initialization
	   process (see the first Caveat paragraph).  Use the
	   VICAR ALLOC command instead if you need to initialize.
.LEVEL1
.VAR DEVICE
Actual or symbolic
name(s) of tape
drive.
.VAR LABEL
Volume label(s)
for ANSI tape(s).
.VAR NAME
Symbolic name for tape
drive.
.VAR DENSITY
Tape density.
.VAR BLOCKING
Block size, record
size.
.VAR COMMENT
Comment to operator.
.VAR PROTECT
READ/WRITE
.VAR INIT
NOINIT/INIT
.LEVEL2
.VAR DEVICE


	DEVICE is the actual or symbolic name of the tape drive.

	DEVICE alone may be used to specify the tape drive if 
	the drive has been previously allocated.  If the drive 
	has been allocated and NAME is specified on foreign tapes,
	DEVICE is not required.  If the drive has not been previously
	allocated, DEVICE is required.

	For ANSI-labeled tapes, DEVICE is required.  One or more
	devices may be listed for multivolume tape operations.
.VAR LABEL


	The LABEL parameter MUST be specified for ANSI-
	labeled tapes.

	The LABEL paramater must NOT be specified for foreign
	tapes.

	The LABEL parameter specifies the volume label for each
	(one or more) volume in the volume set.  This label should
	correspond to the name written on the outside of the tape
	reel but it doesn't have to.  It must, however, match the
	label that is magnetically written on the tape.
.VAR NAME


	For ANSI-labeled tapes, the NAME parameter is optional and
	defines a logical name to refer to the volume set.  If you
	don't specify NAME, the symbolic or actual name of the
	first device may be used to refer to the volume set instead.

	For foreign tapes, NAME is the symbolic name to associate
	with the tape drive.

	NAME alone may be used to specify the tape drive for
	foreign tapes if the drive has been previously allocated.
	If the drive has been allocated and DEVICE is specified,
	NAME is not required.  If the drive has not been previously
	allocated, NAME is required.
.VAR DENSITY


	This is the tape density in BPI.  Allowable values
	are 800, 1600, and 6250.  The default is 1600.
.VAR BLOCKING


	By default, blocking is not enabled and the user does
	not have to specify the BLOCKING parameter on the MOUNT
	command.

	If blocking is used to write a tape, the same BLOCKING
	parameters must be used on subsequent MOUNTs in order to
	read the tape.  If blocking is not enabled when writing
	a tape, then subsequent MOUNTs of the tape should not
	specify a blocking factor.

	The recordsize part of the BLOCKING parameter is ignored
	unless you are reading an unlabeled file (in the sense
	of no VICAR label), in which case it is used to help
	figure out the actual size of the records on the tape.
.VAR COMMENT


	   This is an optional message to send to the operator
	   with the mount request.
.VAR PROTECT


	This parameter specifies the software protection.  Valid
	values are READ and WRITE.  READ means the tape can only
	be read and is software write-locked.

	WRITE means that the tape is required to have a write
	ring.  If it is mounted without a ring, the tape is
	dismounted and the operator is forced to reply to a 
	request for a ring.

	READ is the default.
.VAR INIT


	This parameter specifies whether or not to initialize
	an ANSI-labeled tape before using it.  Valid values
	are INIT and NOINIT.  The default is NOINIT.

	All ANSI tapes must be initialized before using them
	the first time.  INIT will erase the tape, so make
	sure it contains no important data.  The labels
	specified in the LABEL parameter are used to name the
	tapes.  If 'INIT is specified, then 'WRITE must be also.
.END
.ifend
!
! Unix version
!
.if UNIX
			Function and Format


	Function:

	    MOUNT informes TAE that a tape has been mounted.


	Format:

	    MOUNT  DEVICE=device-name  NAME=symbolic-name
.PAGE
			Description
			-----------

	At the present time, tape handling under Unix is fairly
	limited.  Only the "foreign" tape format is supported;
	support for ANSI-labeled tapes has not yet been implemented.
	The only tape currently supported in VICAR is a standard
	9-track tape on a Sun computer using the "xt" device driver
	(the "st" driver is NOT supported).

	Other types of tapes may of course be used in the standard
	manner, but not under VICAR.  Typically, other tapes will
	be accessed via the "tar" or "dd" programs.  VICAR would
	access the files only on disk; they would be written to or
	read from the tape outside of VICAR.  The rest of this
	help file assumes you are using a tape that is supported
	directly by VICAR.
.PAGE
			Description (continued)
			-----------

	Since Unix does not have the concept of an "operator", the
	function of the MOUNT command is quite different than under VMS.
	Under VMS, the MOUNT command would send a message to the operator
	requesting that a tape be mounted.  So, indirectly, the MOUNT
	command would cause the tape to be physically mounted on the
	drive, as well as informing the system that the tape was available.

	Under Unix, the situation is quite different.  Since there
	is no operator, there is no one to ask to mount the tape.
	The user must physically put the tape on the drive.  The
	MOUNT command is then quite simple:  it merely informes
	TAE (and therefore the rest of VICAR) that a tape is now
	available.  It does this by setting the $TAPES, $TFILE,
	and $TREC global variables in TAE.
.PAGE
			Description (continued)
			-----------

	You must be quite careful with tapes in Unix.  There is no
	protection against other users like there is under VMS.  Once
	a tape is in the drive, any user on the system can access it,
	even write to it if it has a write ring.  This problem will be
	addressed in the future, but for now you must be aware of it.

	In VICAR, "foreign" (supported) tapes must have a symbolic name
	associated with them.  This name is assigned by specifying both
	a device and a symbolic name on the MOUNT command.  The device
	must be a non-rewinding device.  Files are then accessed by
	putting a slash "/" and a file number after the symbolic name,
	as in "TAPE/1" or "VGR042/35".  VICAR distinguishes this from a
	directory specification by searching the tape symbolic name table
	for the name in front of the slash.  If it is not present, VICAR
	assumes you are referring to a disk file in the named directory.
.PAGE
			Example
			-------

	VICAR>mount /dev/nrmt0 tape

	The above command associates the tape in the device "/dev/nrmt0"
	with the symbolic name "tape".
.LEVEL1
.VAR DEVICE
Actual device name
of tape drive.
.VAR NAME
Symbolic name for tape
drive.
.LEVEL2
.VAR DEVICE
	DEVICE is the standard Unix device name of the tape drive
	in use.  It must include the "/dev" prefix, so an example
	would be "/dev/nrmt0".  Note that a non-rewinding device
	(one that starts with "n") should be used for VICAR tapes.
	The "mt" command may be used from the shell to rewind the
	device when you are done with it, as in:

	ush mt -f device-name rewind

	where "device-name" is the same name given in the DEVICE
	parameter.

	See your system administrator for the device name of any tape
	on your system.  There is no real standard for names, so you
	must ask for each machine.
.VAR NAME
	NAME is the symbolic name to associate with the tape drive.
	It is used to access the tape from a filename within VICAR.
.END
.ifend
