	.TITLE	MOVE_VMS	Copy bytes from one array to another
;
; v2_move(a,b,len)
;
; v2_move is a c-callable routine that moves a block of
; memory of length, len bytes from b to a... 
;
; a typical call sequence might be:
;
; int len ;
; char a[10],b[10] ;
;    ...
; v2_move(a,b,len) ;
;

; v2_move(to, from, length)

	.entry	v2_move,^m<r2,r3,r4,r5,r6>
	movl	4(ap),r3	; To
	movl	8(ap),r1	; From
	movl	12(ap),r6	; Length

	cmpl	r1,r3
	bgtr	1$		; normal forward case
	blss	3$		; overlapping, must do backwards
	ret			; equal, nothing to do

;  Forward case  ( From > To )

1$:
	movzwl	#65535,r0	; if length <= 65535
	cmpl	r6,r0
	bgtr	2$
	movc3	r6,(r1),(r3)    ; then copy once
	ret
2$:
	subl2	r0,r6		; else copy in loop for each 65535 bytes
	movc3	r0,(r1),(r3)
        brw	1$

;  Overlapping case (do copy backwards)

3$:
	addl2	r6,r1		; From = From + Length
	addl2	r6,r3		; To   = To   + Length
	movzwl	#65535,r0	
4$:
	cmpl	r6,r0		; if length <= 65535
	bgtr	5$
	subl2	r6,r1		; then copy once backwards
	subl2	r6,r3
	movc3	r6,(r1),(r3)
	ret
5$:
	subl2	r0,r6		; else copy backwards in a loop
	subl2	r0,r1
	subl2	r0,r3
	movc3	r0,(r1),(r3)
	movzwl	#65535,r0
	subl2	r0,r1
	subl2	r0,r3
	brw	4$
	.end
