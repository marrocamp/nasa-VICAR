!       edited 19-may-83...dm
!              03-oct-83 - add enable/disable-tol...nhe
!              29-nov-83 - general v1.1 cleanup...jtm
!              21-jan-84 - conditional text for UNIX...dm
!              27-jan-85 - added "command" adjective to all references
!                          to qualifiers to avoid confusion with
!                          parameter qualifiers...jtm
!              28-jan-85 - added reference to TUTOR proc- to get
!                          subcommand display in tutor...jtm
!              29-jan-85 - added reference to parameter quals...jtm
!              29-jan-85 - added to subcommand list for:
!                               ABORT-SYNC,-BATCH,BATCH-SUBMIT,SHOW-BATCH,
!                               DELETE-COMMAND.....joh          
!              29-apr-85 - add RCJM information...nhe
!	       18-sep-86 - PR 1018: Describe use of "LET $ECHO=YES"...peb
!	       19-sep-86 - Add DISABLE-INTERRUPT,-HOST, ENABLE-INTERRUPT,
!			   MENU-CLOSED...nhe
!              31-dec-86 - TAE FACELIFT...krw
!              28-sep-87 - Added examples to RESTORE and SAVE...rww
!	       29-feb-88 - Made commands match with TAE Plus...krw
!	23-may-90	Removed RCJM stuff...ljn
!	02-nov-90	Removed Facelift stuff...ljn
! 	13-nov-90	Added WPT-SETPANELSTATE and modified WPT-PANEL...ljn
!	16-nov-90	Added WPT-REHEARSE; PARMUPDATE,VIEWUPDATE missing...ljn
!	01-dec-90	Changed WPT-REHEARSE cycle to cycles, type to order...cew

.TITLE
TAE COMMAND LANGUAGE
.HELP
                        General and Specific HELP


                This is general help information for using
                TCL. You can access more specific help on a
                given command by typing the following:

                        HELP  command-name
        
                The TCL commands available are listed below.
                An asterisk ("*") in the command name indicates that
                a command may be abbreviated using at least all
                the characters  prior to the asterisk. The asterisk
                is not part of the command.

.PAGE
                        TCL Commands


                A*BORT
                A*BORT-ASYNC JOB=job-name-list
		A*BORT-SYNC
.if VAX_VMS
                A*BORT-BATCH JOBID=job-id QUEUE=queue-name

                BATCH         QUEUE=queue-name
                BATCH-DELETE  JOBID=job-id QUEUE=queue-name
                BATCH-STATUS  QUEUE=queue-name
                BATCH-SUSPEND QUEUE=queue-name
                BATCH-RESUME  QUEUE=queue-name
                BATCH-UPDATE  JOBID=job-id PRIORITY=new-priority QUEUE=queue
                BATCH-SUBMIT  PROC=pdf-name SAVEFILE=savefile-name QUEUE=queue
                              STDOUT=batch-log-name     


                                        (continued...)
.PAGE
                        TCL Commands (continued)
.ifend

                CONT*INUE       
.if VAX_VMS
                DCL              any-VMS/DCL-command
                DCL-NOINTERRUPT  any-VMS/DCL-command
.ifend
                DEFC*MD COMMAND=command-name STRING=replacement-string
                DELC*MD COMMAND=command-name

                DELE*TE          NAME=name-of-global-or-local-variable
                DELE*TE-COMMAND  COMMAND=user-defined-command-name
                DELE*TE-GLOBALS  PROC=global-pdf-name
                DELE*TE-LOCALS
                DELE*TE-VARIABLE NAME=name-of-global-or-local-variable
                                        (continued...)
.PAGE
                        TCL Commands (continued)

		DISA*BLE-FORCE_LOWER
		DISA*BLE-HOST
		DISA*BLE-INTERRUPT
		DISA*BLE-LOG
		DISA*BLE-RECVAR
		DISA*BLE-TOL
                DISP*LAY          VARIABLE=(variable1, variable2, ...)
                DISP*LAY-ALL
                DISP*LAY-GLOBALS
                DISP*LAY-LOCALS
                DISP*LAY-PARFILE  FILE=file-name VARIABLE=(var1, var2, ...)
                DISP*LAY-PARMS
                DISP*LAY-VARIABLE VARIABLE=(variable1, variable2, ...)
                                        (continued...)
.PAGE
			TCL Commands (continued)

		ENA*BLE-FORCE_LOWER
		ENA*BLE-INTERRUPT
		ENA*BLE-LOG
		ENA*BLE-RECVAR
		ENA*BLE-SCRIPT FILE=script-file COUNT=integer
		ENA*BLE-TOL    FILE=logging-file

        	EX*IT

                                        (continued...)
.PAGE
                        TCL Commands (continued)

                H*ELP
                H*ELP-COMMAND COMMAND=command-subcmd
                H*ELP-GLOBAL  VARIABLE=global
                H*ELP-MESSAGE KEY=string
                H*ELP-PARM    PARM=name PROC=proc-subcmd
                H*ELP-PROC    PROC=proc-subcmd

		LET           variable-name = expression
        	LO*GOFF
        	M*ENU         NAME=menu-name
        	M*ENU-CLOSED  NAME=menu-name
        	M*ENU-OPEN    NAME=menu-name
                RECV*AR-DISABLE
		RECV*AR-ENABLE
		RECV*AR-RECEIVE VARIABLE=variable-list JOB=job-name
                                        (continued...)
.PAGE
                        TCL Commands (continued)

		REMO*VE           JOB=job-name-list
		REPL*Y            JOB=job-name
                REST*ORE          FILE=save-file-name VARIABLE=variable-list
                                  TARGET=variable-list
                REST*ORE-ALL      FILE=save-file-name
                REST*ORE-GLOBALS  FILE=save-file-name
                REST*ORE-LOCALS   FILE=save-file-name
                REST*ORE-PARMS    FILE=save-file-name
		REST*ORE-VARIABLE FILE=save-file-name VARIABLE=variable-list
                SAVE              FILE=save-file-name VARIABLE=variable-list
                SAVE-ALL          FILE=save-file-name
                SAVE-GLOBALS      FILE=save-file-name
                SAVE-LOCALS       FILE=save-file-name
                SAVE-PARMS        FILE=save-file-name
		SAVE-VARIABLE     FILE=save-file-name VARIABLE=variable-list
                                        (continued...)
.PAGE
                        TCL Commands (continued)

                SENDVAR        VARIABLE=variable-list JOB=job-name
                SETL*IB        LIBRARY=(library1, library2,...)
                SETL*IB-ADD    LIBRARY=(library1, library2, ...)
                SETL*IB-DELETE LIBRARY=(library1, library2, ...)
                SETL*IB-SET    LIBRARY=(library1, library2, ...)

                SH*OW
                SH*OW-ASYNC   JOB=job-name-list FORM=format-type
.if1 VAX_VMS
                SH*OW-BATCH   QUEUE=queue-name
                SH*OW-LIBRARY
                SH*OW-WAITING JOB=job-name-list FORM=format-type


                                                (continued...)
.PAGE
                        TCL Commands (continued)

                T*UTOR          PROC=proc-subcmd  parameters
                T*UTOR          PROC=proc-
                T*UTOR-SCREEN   PROC=proc-subcmd  parameters
                T*UTOR-NOSCREEN PROC=proc-subcmd  parameters

.if1 UNIX
                USH any-UNIX/shell-command
                WAIT-ASYNC JOB=job-name-list

                                                (continued...)
.PAGE
                        TCL Commands (continued)

                WPT-BEGINWAIT   	PANEL=panel_name
                WPT-ENDWAIT     	PANEL=panel_name
                WPT-ERASE       	PANEL=panel_name
                WPT-EVENT       	PARM=parm_name PANEL=panel_name
                WPT-INIT
                WPT-MESSAGE     	PANEL=panel_name MESSAGE=message_text
                WPT-PANEL       	VIEW=view TARGET=target
                                	PANEL=panel_name STATE=state_name
		WPT-PARMUPDATE		PANEL=panel_name PARM=parm_name
                WPT-REJECT      	PANEL=panel_name PARM=parm_name
                                	MESSAGE=reject_message_text
		WPT-REHEARSE		INTERVAL=interval ORDER=order
					CYCLES=cycles
		WPT-SETPANELSTATE	PANEL=panel_name STATE=state_name
		WPT-VIEWUPDATE		PANEL=panel_name PARM=parm_name
					VIEW=view

                ?       (same as HELP-MESSAGE for last message)
.PAGE
                        VICAR Extended TCL Commands

.if VAX_VMS
                ALLO*C          DEVICE=device-name NAME=symbolic-name
                AT*TACH         PROCESS=process-name

                DAL             FILE=symbolic-name
                DEAL*LOC        DEVICE=device-name NAME=symbolic-name
                DEFL*OG-ADD     NAME=symbolic-name VALUE=value
                DEFL*OG-DELETE  NAME=symbolic-name
                DEFS*YM-ADD     NAME=symbolic-name VALUE=value
                DEFS*YM-DELETE  NAME=symbolic-name
.ifend
                DISM*OUNT       DEVICE=device-name NAME=symbolic-name
.if1 VAX_VMS
                                OPTION=option

.if VAX_VMS
                EM*ACS
.page
                        VICAR Extended TCL Commands (continued)

.ifend
                FL*AG-SET       FLAGS=flag-list        (default)
                FL*AG-ADD       FLAGS=flag-list
                FL*AG-DELETE    FLAGS=flag-list
                FL*AG-SHOW
.if1 VAX_VMS
                FREE*DISP       DEVICE=device-name

                LISTP*ROC       PROC=proc-name

.if VAX_VMS
                MAL             FILE=symbolic-name NL=integer NS=integer
                                FORMAT=format
                MOUN*T          DEVICE=device-name(s) LABEL=volume-label(s)
                                NAME=symbolic-name DENSITY=bpi
                                BLOCKING=(blocksize,recordsize)
                                COMMENT=operator-message PROTECT=protection
                                INIT=initialization
.page
                        VICAR Extended TCL Commands (continued)

.ifend
.if1 UNIX
                MOUN*T          DEVICE=device-name NAME=symbolic-name

                NOP*ASSTHRU

                PAS*STHRU
.if VAX_VMS

                REW*IND         DEVICE=device-name

                USE*DISP        DEVICE=device-name
                USA*GE
                USA*GE-SHOW
.ifend
.page
                        Command Line Form / Subcommands


                In addition to executing TAE commands, you may execute
                procs from command mode. The general format for proc
                activation is as follows:

                proc-subcmd|cmd qualifiers| p1|p1 qualifiers| p2...

                The dash after some command names (e.g., ENABLE-LOG)
                and proc names indicates that the following string is
                a "subcommand". You may type the subcommand as shown
                or abbreviate it by omitting any number of trailing
                characters so long as the subcommand cannot be confused
                with another subcommand of the same command. To obtain a
                list of the valid subcommands for a command (or proc),
                type "TUTOR command-" (or proc-").
.PAGE
                        Command Line Form (continued)


                A command (or proc) that has subcommands may be defined
                to have a default subcommand. When that command (or proc)
                is activated without an explicit subcommand, the default
                is used.

                A command may be continued to another line with the "+"
                character as the last non-comment character of a line.

                A line may not be continued in the middle of a command
                name, parameter name, or value. For multi-valued parameters,
                continuation may occur between the component values.

                You may TUTOR on any of the above commands.

.PAGE
			Seeing the Commands Executed by a Proc


		By using the command "LET $ECHO=YES" you may view
		all the commands and proc invocations being
		executed by any procs you invoke.  To disable this
		echoing, type "LET $ECHO=NO".  For a more complete
		discussion of using the TAE implicit global, $ECHO, 
		see "User's Reference Manual for the Transportable
		Applications Executive".
.PAGE

                        Specifying Parameter Values by Position


                Although the commands shown above show the parameter
                names (e.g., "VARIABLE" for DISPLAY) you may enter
                any parameter by "position". For example, in DISPLAY,
                you may omit "VARIABLE=" so long as the name of the file
                is the first character string following ENABLE-SCRIPT.
                The same rules apply to proc activation.


.PAGE
                        Command Qualifiers


                Command qualifiers are TAE-defined parameters that specify
                the environment for command execution.

                The rules for command qualifiers are:

                     1.  All command qualifiers are optional and may appear
                         on any TAE proc invocation (but not on an intrinsic
                         command).

                     2.  If command qualifiers are present, they must be
                         listed between vertical bars ("|") and must be
                         given in standard parameter list format.
.PAGE
                        Command Qualifiers (continued)


                     3.  As for any parameter list, command qualifier values
                         may be specified by position.

                     4.  Command qualifier names may be abbreviated using
                         the same rules as for parameters.

                  Example:

                        TAE> COPY|TEMP, RUNTYPE=BATCH| FILE1

                        This command line submits the COPY proc for batch
                        processing and restores its parameter values from
                        the TEMP file.

.PAGE
                        Command Qualifiers (continued)

          The command qualifiers (listed in positional order) are:

                  NAME            ALLOWED VALUES       DEFAULT
                  ____            ______________       _______

                  RESTORE         A file spec          none

                  RUNTYPE         (BATCH,queuename),   INTERACTIVE
                                  (ASYNC,jobname),
                                  or INTERACTIVE

                  SAVE            A file spec          none

                  STDOUT          A file spec          user terminal

.page
                        Command Qualifiers (continued)

                  NAME            ALLOWED VALUES       DEFAULT
                  ____            ______________       _______

                  JOB             job name             derived from
                                                       proc name

                  ASYNCEND        SILENT or NOTIFY     SILENT


.page
                        RESTORE Command Qualifier


                     "RESTORE=file-specification"

           The RESTORE command qualifier specifies a file that
           contains parameter values.

           Values provided explicitly on the proc invocation
           line override values provided from the restored
           file.

           RESTORE must be explicitly specified; no restore
           operation is performed unless "RESTORE" is on the
           command line.
.page
                        RESTORE Command Qualifier (continued)


           If the RESTORE file specification is the empty
           string, then the name of the file used for the
           restore is the proc name (file type PAR).

           Examples follow.
.page
                        RESTORE Command Qualifier (continued)
           Example:

           TAE> COPY|RESTORE=files.cop|

           The above command activates the COPY proc with
           the parameters previously saved in the file "files.cop".

           Example:

           TAE> COPY|RESTORE|

           The above command activates the COPY proc with
           the parameters previously saved in the file "copy.par".
.PAGE
                        RUNTYPE Command Qualifier


               "RUNTYPE=(BATCH,queue-name) or INTERACTIVE or
                        (ASYNC, jobname)"

           The RUNTYPE command qualifier specifies whether the proc is
           to be run from the user's terminal (INTERACTIVE),
.if VAX_VMS
           submitted to the batch queue (BATCH), or submitted
           to be run asynchronously. The default is INTERACTIVE.
.elseif UNIX
           or to be executed asynchronously in the background.
           The default is INTERACTIVE.
.ifend

           If the RUNTYPE is BATCH, then the second value
           is interpreted as the name of the batch queue;
.if1 VAX_VMS
           the default batch queue is SYS$BATCH.
.if1 UNIX
           the default queue name is NOHUP.

           If the RUNTYPE is ASYNC, then the second value
           is interpreted as the name of the job.
.if1 VAX_VMS
           If the job name is omitted, TAE constructs one.
.PAGE

                        RUNTYPE Command Qualifier (continued)

           If the command qualifier is set to BATCH, the following TAE
           message is displayed:

.if VAX_VMS
               Job (nnn) submitted to queue (que)

           where "nnn" is the assigned job number and "que" is
           the name of the queue the job was submitted to.

.elseif UNIX
                Batch job file "filename" submitted successfully.

           where "filename" is the batch job file name, defined
           as "proc".job.

.ifend
.page
                        RUNTYPE Command Qualifier (continued)


            If the command qualifier is set to ASYNC, the following TAE
            message is displayed:


                [TAE-ASYNCJOB] Asynchronous job 'JOBNAME' initiated.


            The asynchronous job then begins asynchronous execution
            and can be monitored and manipulated with the commands
            ABORT-ASYNC, REMOVE, REPLY, SHOW-ASYNC, SHOW-WAITING,
            and WAIT-ASYNC.
.PAGE
                        SAVE Command Qualifier


                       "SAVE=file-specification"

                 The SAVE command qualifier specifies a file in which to
                 save the values of the parameters used on the
                 current proc invocation. The values saved include
                 the values of all the parameters (including
                 defaults and those values set by RESTORE).

                 A parameter set saved using SAVE may be restored
                 using RESTORE.

                 SAVE must be explicitly specified; no save operation
                 is performed unless "SAVE" appears on the command
                 line.
.PAGE
                        SAVE Command Qualifier (continued)


                 If the specification of the SAVE file is the empty
                 string then the name of the file used for the save
                 is the proc's name (file type PAR).

                 The file created by the SAVE command qualifier is compatible
                 with the file created by the tutor mode SAVE command.

                 Examples follow.
.page
                        SAVE Command Qualifier (continued)
           Example:

           TAE> SAVE=files.sav

           The above command saves parameters in the file "files.sav".

           Example:

           TAE> SAVE

           If issued from a proc called MYPROC, the above command saves 
	   parameters in the file "myproc.par".
.PAGE
                        STDOUT Command Qualifier

                       "STDOUT=file-name"

                 The STDOUT command qualifier specifies the file or device
                 to be used to receive data sent to the "standard
                 output". Standard output is the file or device
                 that (a) receives messages from TAE commands; and
                 (b) is the output destination for the DISPLAY,
                 SHOW, and PUTMSG commands. The default is the
                 user's terminal if RUNTYPE is INTERACTIVE and the
                 name of the proc (implied file type, LOG) if
                 RUNTYPE is BATCH or ASYNC.

                 The STDOUT command qualifier affects the proc invoked
                 and all procs nested under the invoked proc; when the
                 proc terminates, STDOUT will revert to the value
                 it had prior to proc invocation.
.PAGE
                        JOB Qualifier

                       "JOB = job name"

                The JOB qualifier is an alternate means of entering
                a job name for asynchronous jobs.
.PAGE
                        ASYNCEND Command Qualifier


                       "ASYNCEND=SILENT or NOTIFY"

                The ASYNCEND command qualifier specifies if the user
                is to be notified upon completion of the current async
                job.  The qualifier is only valid with RUNTYPE=ASYNC.

                The default for ASYNCEND is SILENT, meaning no notification
                requested.  If NOTIFY is specified, you will receive a
                message, identical to the one for a dynamic parameter request,
                instructing you to use the REPLY command.  If REPLY is
                entered, the notification of job completion will be
                displayed.
.PAGE
                        Parameter Qualifiers

                Like commands, parameters may be qualified. Conceptually,
                parameter qualifiers are like sub-parameters, or parameters
                to the parameters.

                To see how to define parameter qualifiers, see help on
                the PARM parameter definition command.

                On proc activation, the values of qualifiers to a parameter
                are specified between vertical bars immediately following the
                parameter value.

                To reference a parameter qualifier, the parameter name is
                followed immediately with "." followed by the qualifier
                name (e.g. "let i = PARM.QUAL").

.PAGE
                        Proc Interrupt Mode


                To abort a proc that is running you may type CNTRL/C (i.e.,
                hold the CTRL key and type "C").  TAE will prompt you and
                you may then type most TAE commands or you may invoke an
                asynchronous proc.  You may not initiate another synchronous
                proc in proc interrupt mode.
.if UNIX
                Under non-Berkeley systems, the proc aborts even if you
                type CONTINUE.
.ifend

		Proc interrupt mode may be disabled using 
		DISABLE-INTERRUPT; if proc interrupt mode is
		disabled, then CNTRL/C will result in an unconditional
		proc abort.
.END
